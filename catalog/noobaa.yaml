---
image: docker.io/noobaa/noobaa-operator-bundle:v5.13.0
name: noobaa-operator.v5.13.0
package: noobaa-operator
properties:
- type: olm.gvk
  value:
    group: noobaa.io
    kind: BackingStore
    version: v1alpha1
- type: olm.gvk
  value:
    group: noobaa.io
    kind: BucketClass
    version: v1alpha1
- type: olm.gvk
  value:
    group: noobaa.io
    kind: NamespaceStore
    version: v1alpha1
- type: olm.gvk
  value:
    group: noobaa.io
    kind: NooBaa
    version: v1alpha1
- type: olm.gvk
  value:
    group: noobaa.io
    kind: NooBaaAccount
    version: v1alpha1
- type: olm.gvk
  value:
    group: objectbucket.io
    kind: ObjectBucket
    version: v1alpha1
- type: olm.gvk
  value:
    group: objectbucket.io
    kind: ObjectBucketClaim
    version: v1alpha1
- type: olm.package
  value:
    packageName: noobaa-operator
    version: 5.13.0
- type: olm.bundle.object
  value:
    data: 
- type: olm.bundle.object
  value:
    data: 
- type: olm.bundle.object
  value:
    data: 
- type: olm.bundle.object
  value:
    data: 
- type: olm.bundle.object
  value:
    data: 
- type: olm.bundle.object
  value:
    data: 
- type: olm.bundle.object
  value:
    data: eyJhcGlWZXJzaW9uIjoiYXBpZXh0ZW5zaW9ucy5rOHMuaW8vdjEiLCJraW5kIjoiQ3VzdG9tUmVzb3VyY2VEZWZpbml0aW9uIiwibWV0YWRhdGEiOnsiY3JlYXRpb25UaW1lc3RhbXAiOm51bGwsIm5hbWUiOiJvYmplY3RidWNrZXRjbGFpbXMub2JqZWN0YnVja2V0LmlvIn0sInNwZWMiOnsiY29udmVyc2lvbiI6eyJzdHJhdGVneSI6Ik5vbmUifSwiZ3JvdXAiOiJvYmplY3RidWNrZXQuaW8iLCJuYW1lcyI6eyJraW5kIjoiT2JqZWN0QnVja2V0Q2xhaW0iLCJsaXN0S2luZCI6Ik9iamVjdEJ1Y2tldENsYWltTGlzdCIsInBsdXJhbCI6Im9iamVjdGJ1Y2tldGNsYWltcyIsInNob3J0TmFtZXMiOlsib2JjIiwib2JjcyJdLCJzaW5ndWxhciI6Im9iamVjdGJ1Y2tldGNsYWltIn0sInNjb3BlIjoiTmFtZXNwYWNlZCIsInZlcnNpb25zIjpbeyJhZGRpdGlvbmFsUHJpbnRlckNvbHVtbnMiOlt7ImRlc2NyaXB0aW9uIjoiU3RvcmFnZUNsYXNzIiwianNvblBhdGgiOiIuc3BlYy5zdG9yYWdlQ2xhc3NOYW1lIiwibmFtZSI6IlN0b3JhZ2UtQ2xhc3MiLCJ0eXBlIjoic3RyaW5nIn0seyJkZXNjcmlwdGlvbiI6IlBoYXNlIiwianNvblBhdGgiOiIuc3RhdHVzLnBoYXNlIiwibmFtZSI6IlBoYXNlIiwidHlwZSI6InN0cmluZyJ9LHsianNvblBhdGgiOiIubWV0YWRhdGEuY3JlYXRpb25UaW1lc3RhbXAiLCJuYW1lIjoiQWdlIiwidHlwZSI6ImRhdGUifV0sIm5hbWUiOiJ2MWFscGhhMSIsInNjaGVtYSI6eyJvcGVuQVBJVjNTY2hlbWEiOnsicHJvcGVydGllcyI6eyJhcGlWZXJzaW9uIjp7ImRlc2NyaXB0aW9uIjoiQVBJVmVyc2lvbiBkZWZpbmVzIHRoZSB2ZXJzaW9uZWQgc2NoZW1hIG9mIHRoaXMgcmVwcmVzZW50YXRpb24gb2YgYW4gb2JqZWN0LiBTZXJ2ZXJzIHNob3VsZCBjb252ZXJ0IHJlY29nbml6ZWQgc2NoZW1hcyB0byB0aGUgbGF0ZXN0IGludGVybmFsIHZhbHVlLCBhbmQgbWF5IHJlamVjdCB1bnJlY29nbml6ZWQgdmFsdWVzLiBNb3JlIGluZm86IGh0dHBzOi8vZ2l0Lms4cy5pby9jb21tdW5pdHkvY29udHJpYnV0b3JzL2RldmVsL2FwaS1jb252ZW50aW9ucy5tZCNyZXNvdXJjZXMiLCJ0eXBlIjoic3RyaW5nIn0sImtpbmQiOnsiZGVzY3JpcHRpb24iOiJLaW5kIGlzIGEgc3RyaW5nIHZhbHVlIHJlcHJlc2VudGluZyB0aGUgUkVTVCByZXNvdXJjZSB0aGlzIG9iamVjdCByZXByZXNlbnRzLiBTZXJ2ZXJzIG1heSBpbmZlciB0aGlzIGZyb20gdGhlIGVuZHBvaW50IHRoZSBjbGllbnQgc3VibWl0cyByZXF1ZXN0cyB0by4gQ2Fubm90IGJlIHVwZGF0ZWQuIEluIENhbWVsQ2FzZS4gTW9yZSBpbmZvOiBodHRwczovL2dpdC5rOHMuaW8vY29tbXVuaXR5L2NvbnRyaWJ1dG9ycy9kZXZlbC9hcGktY29udmVudGlvbnMubWQjdHlwZXMta2luZHMiLCJ0eXBlIjoic3RyaW5nIn0sInNwZWMiOnsiZGVzY3JpcHRpb24iOiJTcGVjaWZpY2F0aW9uIG9mIHRoZSBkZXNpcmVkIGJlaGF2aW9yIG9mIHRoZSBjbGFpbS4iLCJwcm9wZXJ0aWVzIjp7ImFkZGl0aW9uYWxDb25maWciOnsiYWRkaXRpb25hbFByb3BlcnRpZXMiOnsidHlwZSI6InN0cmluZyJ9LCJkZXNjcmlwdGlvbiI6IkFkZGl0aW9uYWxDb25maWcgZ2l2ZXMgcHJvdmlkZXJzIGEgbG9jYXRpb24gdG8gc2V0IHByb3ByaWV0YXJ5IGNvbmZpZyB2YWx1ZXMgKHRlbmFudCwgbmFtZXNwYWNlLCBldGMpIiwidHlwZSI6Im9iamVjdCJ9LCJidWNrZXROYW1lIjp7ImRlc2NyaXB0aW9uIjoiQnVja2V0TmFtZSAobm90IHJlY29tbWVuZGVkKSB0aGUgbmFtZSBvZiB0aGUgYnVja2V0LiBDYXV0aW9uISBJbi1zdG9yZSBidWNrZXQgbmFtZXMgbWF5IGNvbGxpZGUgYWNyb3NzIG5hbWVzcGFjZXMuICBJZiB5b3UgZGVmaW5lIHRoZSBuYW1lIHlvdXJzZWxmLCB0cnkgdG8gbWFrZSBpdCBhcyB1bmlxdWUgYXMgcG9zc2libGUuIiwidHlwZSI6InN0cmluZyJ9LCJnZW5lcmF0ZUJ1Y2tldE5hbWUiOnsiZGVzY3JpcHRpb24iOiJHZW5lcmF0ZUJ1Y2tldE5hbWUgKHJlY29tbWVuZGVkKSBhIHByZWZpeCBmb3IgYSBidWNrZXQgbmFtZSB0byBiZSBmb2xsb3dlZCBieSBhIGh5cGhlbiBhbmQgNSByYW5kb20gY2hhcmFjdGVycy4gUHJvdGVjdHMgYWdhaW5zdCBpbi1zdG9yZSBuYW1lIGNvbGxpc2lvbnMuIiwidHlwZSI6InN0cmluZyJ9LCJvYmplY3RCdWNrZXROYW1lIjp7ImRlc2NyaXB0aW9uIjoiT2JqZWN0QnVja2V0TmFtZSBpcyB0aGUgbmFtZSBvZiB0aGUgb2JqZWN0IGJ1Y2tldCByZXNvdXJjZS4gVGhpcyBpcyB0aGUgYXV0aG9yaXRhdGl2ZSBkZXRlcm1pbmF0aW9uIGZvciBiaW5kaW5nLiIsInR5cGUiOiJzdHJpbmcifSwic3RvcmFnZUNsYXNzTmFtZSI6eyJkZXNjcmlwdGlvbiI6IlN0b3JhZ2VDbGFzcyBuYW1lcyB0aGUgU3RvcmFnZUNsYXNzIG9iamVjdCByZXByZXNlbnRpbmcgdGhlIGRlc2lyZWQgcHJvdmlzaW9uZXIgYW5kIHBhcmFtZXRlcnMiLCJ0eXBlIjoic3RyaW5nIn19LCJyZXF1aXJlZCI6WyJzdG9yYWdlQ2xhc3NOYW1lIl0sInR5cGUiOiJvYmplY3QifSwic3RhdHVzIjp7ImRlc2NyaXB0aW9uIjoiTW9zdCByZWNlbnRseSBvYnNlcnZlZCBzdGF0dXMgb2YgdGhlIGNsYWltLiIsInByb3BlcnRpZXMiOnsicGhhc2UiOnsiZGVzY3JpcHRpb24iOiJPYmplY3RCdWNrZXRDbGFpbVN0YXR1c1BoYXNlIGlzIHNldCBieSB0aGUgY29udHJvbGxlciB0byBzYXZlIHRoZSBzdGF0ZSBvZiB0aGUgcHJvdmlzaW9uaW5nIHByb2Nlc3MiLCJlbnVtIjpbIlBlbmRpbmciLCJCb3VuZCIsIlJlbGVhc2VkIiwiRmFpbGVkIl0sInR5cGUiOiJzdHJpbmcifX0sInR5cGUiOiJvYmplY3QifX0sInR5cGUiOiJvYmplY3QifX0sInNlcnZlZCI6dHJ1ZSwic3RvcmFnZSI6dHJ1ZSwic3VicmVzb3VyY2VzIjp7InN0YXR1cyI6e319fV19LCJzdGF0dXMiOnsiYWNjZXB0ZWROYW1lcyI6eyJraW5kIjoiIiwicGx1cmFsIjoiIn0sImNvbmRpdGlvbnMiOm51bGwsInN0b3JlZFZlcnNpb25zIjpudWxsfX0=
- type: olm.bundle.object
  value:
    data: eyJhcGlWZXJzaW9uIjoiYXBpZXh0ZW5zaW9ucy5rOHMuaW8vdjEiLCJraW5kIjoiQ3VzdG9tUmVzb3VyY2VEZWZpbml0aW9uIiwibWV0YWRhdGEiOnsiY3JlYXRpb25UaW1lc3RhbXAiOm51bGwsIm5hbWUiOiJvYmplY3RidWNrZXRzLm9iamVjdGJ1Y2tldC5pbyJ9LCJzcGVjIjp7ImNvbnZlcnNpb24iOnsic3RyYXRlZ3kiOiJOb25lIn0sImdyb3VwIjoib2JqZWN0YnVja2V0LmlvIiwibmFtZXMiOnsia2luZCI6Ik9iamVjdEJ1Y2tldCIsImxpc3RLaW5kIjoiT2JqZWN0QnVja2V0TGlzdCIsInBsdXJhbCI6Im9iamVjdGJ1Y2tldHMiLCJzaG9ydE5hbWVzIjpbIm9iIiwib2JzIl0sInNpbmd1bGFyIjoib2JqZWN0YnVja2V0In0sInNjb3BlIjoiQ2x1c3RlciIsInZlcnNpb25zIjpbeyJhZGRpdGlvbmFsUHJpbnRlckNvbHVtbnMiOlt7ImRlc2NyaXB0aW9uIjoiU3RvcmFnZUNsYXNzIiwianNvblBhdGgiOiIuc3BlYy5zdG9yYWdlQ2xhc3NOYW1lIiwibmFtZSI6IlN0b3JhZ2UtQ2xhc3MiLCJ0eXBlIjoic3RyaW5nIn0seyJkZXNjcmlwdGlvbiI6IkNsYWltTmFtZXNwYWNlIiwianNvblBhdGgiOiIuc3BlYy5jbGFpbVJlZi5uYW1lc3BhY2UiLCJuYW1lIjoiQ2xhaW0tTmFtZXNwYWNlIiwidHlwZSI6InN0cmluZyJ9LHsiZGVzY3JpcHRpb24iOiJDbGFpbU5hbWUiLCJqc29uUGF0aCI6Ii5zcGVjLmNsYWltUmVmLm5hbWUiLCJuYW1lIjoiQ2xhaW0tTmFtZSIsInR5cGUiOiJzdHJpbmcifSx7ImRlc2NyaXB0aW9uIjoiUmVjbGFpbVBvbGljeSIsImpzb25QYXRoIjoiLnNwZWMucmVjbGFpbVBvbGljeSIsIm5hbWUiOiJSZWNsYWltLVBvbGljeSIsInR5cGUiOiJzdHJpbmcifSx7ImRlc2NyaXB0aW9uIjoiUGhhc2UiLCJqc29uUGF0aCI6Ii5zdGF0dXMucGhhc2UiLCJuYW1lIjoiUGhhc2UiLCJ0eXBlIjoic3RyaW5nIn0seyJqc29uUGF0aCI6Ii5tZXRhZGF0YS5jcmVhdGlvblRpbWVzdGFtcCIsIm5hbWUiOiJBZ2UiLCJ0eXBlIjoiZGF0ZSJ9XSwibmFtZSI6InYxYWxwaGExIiwic2NoZW1hIjp7Im9wZW5BUElWM1NjaGVtYSI6eyJwcm9wZXJ0aWVzIjp7ImFwaVZlcnNpb24iOnsiZGVzY3JpcHRpb24iOiJBUElWZXJzaW9uIGRlZmluZXMgdGhlIHZlcnNpb25lZCBzY2hlbWEgb2YgdGhpcyByZXByZXNlbnRhdGlvbiBvZiBhbiBvYmplY3QuIFNlcnZlcnMgc2hvdWxkIGNvbnZlcnQgcmVjb2duaXplZCBzY2hlbWFzIHRvIHRoZSBsYXRlc3QgaW50ZXJuYWwgdmFsdWUsIGFuZCBtYXkgcmVqZWN0IHVucmVjb2duaXplZCB2YWx1ZXMuIE1vcmUgaW5mbzogaHR0cHM6Ly9naXQuazhzLmlvL2NvbW11bml0eS9jb250cmlidXRvcnMvZGV2ZWwvYXBpLWNvbnZlbnRpb25zLm1kI3Jlc291cmNlcyIsInR5cGUiOiJzdHJpbmcifSwia2luZCI6eyJkZXNjcmlwdGlvbiI6IktpbmQgaXMgYSBzdHJpbmcgdmFsdWUgcmVwcmVzZW50aW5nIHRoZSBSRVNUIHJlc291cmNlIHRoaXMgb2JqZWN0IHJlcHJlc2VudHMuIFNlcnZlcnMgbWF5IGluZmVyIHRoaXMgZnJvbSB0aGUgZW5kcG9pbnQgdGhlIGNsaWVudCBzdWJtaXRzIHJlcXVlc3RzIHRvLiBDYW5ub3QgYmUgdXBkYXRlZC4gSW4gQ2FtZWxDYXNlLiBNb3JlIGluZm86IGh0dHBzOi8vZ2l0Lms4cy5pby9jb21tdW5pdHkvY29udHJpYnV0b3JzL2RldmVsL2FwaS1jb252ZW50aW9ucy5tZCN0eXBlcy1raW5kcyIsInR5cGUiOiJzdHJpbmcifSwic3BlYyI6eyJkZXNjcmlwdGlvbiI6IlNwZWNpZmljYXRpb24gb2YgdGhlIGRlc2lyZWQgYmVoYXZpb3Igb2YgdGhlIGJ1Y2tldC4iLCJwcm9wZXJ0aWVzIjp7ImFkZGl0aW9uYWxTdGF0ZSI6eyJhZGRpdGlvbmFsUHJvcGVydGllcyI6eyJ0eXBlIjoic3RyaW5nIn0sImRlc2NyaXB0aW9uIjoiYWRkaXRpb25hbFN0YXRlIGdpdmVzIHByb3ZpZGVycyBhIGxvY2F0aW9uIHRvIHNldCBwcm9wcmlldGFyeSBjb25maWcgdmFsdWVzICh0ZW5hbnQsIG5hbWVzcGFjZSwgZXRjKSIsInR5cGUiOiJvYmplY3QifSwiY2xhaW1SZWYiOnsiZGVzY3JpcHRpb24iOiJPYmplY3RSZWZlcmVuY2UgdG8gT2JqZWN0QnVja2V0Q2xhaW0iLCJ0eXBlIjoib2JqZWN0In0sImVuZHBvaW50Ijp7ImRlc2NyaXB0aW9uIjoiRW5kcG9pbnQgY29udGFpbnMgYWxsIGNvbm5lY3Rpb24gcmVsZXZhbnQgZGF0YSB0aGF0IGFuIGFwcCBtYXkgcmVxdWlyZSBmb3IgYWNjZXNzaW5nIHRoZSBidWNrZXQiLCJwcm9wZXJ0aWVzIjp7ImFkZGl0aW9uYWxDb25maWciOnsiYWRkaXRpb25hbFByb3BlcnRpZXMiOnsidHlwZSI6InN0cmluZyJ9LCJkZXNjcmlwdGlvbiI6IkFkZGl0aW9uYWxDb25maWcgZ2l2ZXMgcHJvdmlkZXJzIGEgbG9jYXRpb24gdG8gc2V0IHByb3ByaWV0YXJ5IGNvbmZpZyB2YWx1ZXMgKHRlbmFudCwgbmFtZXNwYWNlLCBldGMpIiwidHlwZSI6Im9iamVjdCJ9LCJidWNrZXRIb3N0Ijp7ImRlc2NyaXB0aW9uIjoiQnVja2V0IGFkZHJlc3MgaG9zdG5hbWUiLCJ0eXBlIjoic3RyaW5nIn0sImJ1Y2tldE5hbWUiOnsiZGVzY3JpcHRpb24iOiJCdWNrZXQgbmFtZSIsInR5cGUiOiJzdHJpbmcifSwiYnVja2V0UG9ydCI6eyJkZXNjcmlwdGlvbiI6IkJ1Y2tldCBhZGRyZXNzIHBvcnQiLCJ0eXBlIjoiaW50ZWdlciJ9LCJyZWdpb24iOnsiZGVzY3JpcHRpb24iOiJCdWNrZXQgcmVnaW9uIiwidHlwZSI6InN0cmluZyJ9LCJzdWJSZWdpb24iOnsiZGVzY3JpcHRpb24iOiJCdWNrZXQgc3ViLXJlZ2lvbiIsInR5cGUiOiJzdHJpbmcifX0sInR5cGUiOiJvYmplY3QifSwicmVjbGFpbVBvbGljeSI6eyJkZXNjcmlwdGlvbiI6IkRlc2NyaWJlcyBhIHBvbGljeSBmb3IgZW5kLW9mLWxpZmUgbWFpbnRlbmFuY2Ugb2YgT2JqZWN0QnVja2V0LiIsImVudW0iOlsiRGVsZXRlIiwiUmV0YWluIiwiUmVjeWNsZSJdLCJ0eXBlIjoic3RyaW5nIn0sInN0b3JhZ2VDbGFzc05hbWUiOnsiZGVzY3JpcHRpb24iOiJTdG9yYWdlQ2xhc3MgbmFtZXMgdGhlIFN0b3JhZ2VDbGFzcyBvYmplY3QgcmVwcmVzZW50aW5nIHRoZSBkZXNpcmVkIHByb3Zpc2lvbmVyIGFuZCBwYXJhbWV0ZXJzIiwidHlwZSI6InN0cmluZyJ9fSwicmVxdWlyZWQiOlsic3RvcmFnZUNsYXNzTmFtZSJdLCJ0eXBlIjoib2JqZWN0In0sInN0YXR1cyI6eyJkZXNjcmlwdGlvbiI6Ik1vc3QgcmVjZW50bHkgb2JzZXJ2ZWQgc3RhdHVzIG9mIHRoZSBidWNrZXQuIiwicHJvcGVydGllcyI6eyJwaGFzZSI6eyJkZXNjcmlwdGlvbiI6Ik9iamVjdEJ1Y2tldFN0YXR1c1BoYXNlIGlzIHNldCBieSB0aGUgY29udHJvbGxlciB0byBzYXZlIHRoZSBzdGF0ZSBvZiB0aGUgcHJvdmlzaW9uaW5nIHByb2Nlc3MiLCJlbnVtIjpbIkJvdW5kIiwiUmVsZWFzZWQiLCJGYWlsZWQiXSwidHlwZSI6InN0cmluZyJ9fSwidHlwZSI6Im9iamVjdCJ9fSwidHlwZSI6Im9iamVjdCJ9fSwic2VydmVkIjp0cnVlLCJzdG9yYWdlIjp0cnVlLCJzdWJyZXNvdXJjZXMiOnsic3RhdHVzIjp7fX19XX0sInN0YXR1cyI6eyJhY2NlcHRlZE5hbWVzIjp7ImtpbmQiOiIiLCJwbHVyYWwiOiIifSwiY29uZGl0aW9ucyI6bnVsbCwic3RvcmVkVmVyc2lvbnMiOm51bGx9fQ==
relatedImages:
- image: centos/postgresql-12-centos7
  name: noobaa-db
- image: docker.io/noobaa/noobaa-operator-bundle:v5.13.0
  name: ""
- image: quay.io/master-20230311
  name: noobaa-core
- image: quay.io/noobaa/noobaa-operator:master-20230311
  name: noobaa-operator
schema: olm.bundle
