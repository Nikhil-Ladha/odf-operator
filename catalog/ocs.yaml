---
image: quay.io/ocs-dev/ocs-operator-bundle:main-552d231
name: ocs-operator.v4.19.0
package: ocs-operator
properties:
- type: olm.gvk
  value:
    group: ocs.openshift.io
    kind: OCSInitialization
    version: v1
- type: olm.gvk
  value:
    group: ocs.openshift.io
    kind: StorageAutoScaler
    version: v1
- type: olm.gvk
  value:
    group: ocs.openshift.io
    kind: StorageCluster
    version: v1
- type: olm.gvk
  value:
    group: ocs.openshift.io
    kind: StorageClusterPeer
    version: v1
- type: olm.gvk
  value:
    group: ocs.openshift.io
    kind: StorageConsumer
    version: v1alpha1
- type: olm.gvk
  value:
    group: ocs.openshift.io
    kind: StorageRequest
    version: v1alpha1
- type: olm.package
  value:
    packageName: ocs-operator
    version: 4.19.0
- type: olm.bundle.object
  value:
    data: eyJhcGlWZXJzaW9uIjoidjEiLCJkYXRhIjp7ImNlcGguY29uZiI6IltnbG9iYWxdXG5hdXRoX2NsdXN0ZXJfcmVxdWlyZWQgPSBjZXBoeFxuYXV0aF9zZXJ2aWNlX3JlcXVpcmVkID0gY2VwaHhcbmF1dGhfY2xpZW50X3JlcXVpcmVkID0gY2VwaHhcbiIsImtleXJpbmciOiIifSwia2luZCI6IkNvbmZpZ01hcCIsIm1ldGFkYXRhIjp7Im5hbWUiOiJvY3MtbWV0cmljcy1leHBvcnRlci1jZXBoLWNvbmYifX0=
- type: olm.bundle.object
  value:
    data: eyJhcGlWZXJzaW9uIjoicmJhYy5hdXRob3JpemF0aW9uLms4cy5pby92MSIsImtpbmQiOiJSb2xlIiwibWV0YWRhdGEiOnsibmFtZSI6Im9jcy1zdGF0dXMtcmVwb3J0ZXIifSwicnVsZXMiOlt7ImFwaUdyb3VwcyI6WyJvY3Mub3BlbnNoaWZ0LmlvIl0sInJlc291cmNlcyI6WyJzdG9yYWdlY2x1c3RlcnMiXSwidmVyYnMiOlsiZ2V0IiwibGlzdCJdfV19
- type: olm.bundle.object
  value:
    data: eyJhcGlWZXJzaW9uIjoicmJhYy5hdXRob3JpemF0aW9uLms4cy5pby92MSIsImtpbmQiOiJSb2xlQmluZGluZyIsIm1ldGFkYXRhIjp7Im5hbWUiOiJvY3Mtc3RhdHVzLXJlcG9ydGVyIn0sInJvbGVSZWYiOnsiYXBpR3JvdXAiOiJyYmFjLmF1dGhvcml6YXRpb24uazhzLmlvIiwia2luZCI6IlJvbGUiLCJuYW1lIjoib2NzLXN0YXR1cy1yZXBvcnRlciJ9LCJzdWJqZWN0cyI6W3sia2luZCI6IlNlcnZpY2VBY2NvdW50IiwibmFtZSI6Im9jcy1zdGF0dXMtcmVwb3J0ZXIifV19
- type: olm.bundle.object
  value:
    data: eyJhcGlWZXJzaW9uIjoidjEiLCJraW5kIjoiU2VydmljZUFjY291bnQiLCJtZXRhZGF0YSI6eyJuYW1lIjoib2NzLXN0YXR1cy1yZXBvcnRlciJ9fQ==
- type: olm.bundle.object
  value:
    data: eyJhcGlWZXJzaW9uIjoicmJhYy5hdXRob3JpemF0aW9uLms4cy5pby92MSIsImtpbmQiOiJSb2xlIiwibWV0YWRhdGEiOnsibmFtZSI6Im9jcy1tZXRyaWNzLXN2YyJ9LCJydWxlcyI6W3siYXBpR3JvdXBzIjpbIiJdLCJyZXNvdXJjZXMiOlsic2VydmljZXMiLCJlbmRwb2ludHMiLCJwb2RzIl0sInZlcmJzIjpbImdldCIsImxpc3QiLCJ3YXRjaCJdfV19
- type: olm.bundle.object
  value:
    data: eyJhcGlWZXJzaW9uIjoicmJhYy5hdXRob3JpemF0aW9uLms4cy5pby92MSIsImtpbmQiOiJSb2xlQmluZGluZyIsIm1ldGFkYXRhIjp7Im5hbWUiOiJvY3MtbWV0cmljcy1zdmMifSwicm9sZVJlZiI6eyJhcGlHcm91cCI6InJiYWMuYXV0aG9yaXphdGlvbi5rOHMuaW8iLCJraW5kIjoiUm9sZSIsIm5hbWUiOiJvY3MtbWV0cmljcy1zdmMifSwic3ViamVjdHMiOlt7ImtpbmQiOiJTZXJ2aWNlQWNjb3VudCIsIm5hbWUiOiJwcm9tZXRoZXVzLWs4cyIsIm5hbWVzcGFjZSI6Im9wZW5zaGlmdC1tb25pdG9yaW5nIn1dfQ==
- type: olm.bundle.object
  value:
    data: eyJhcGlWZXJzaW9uIjoicmJhYy5hdXRob3JpemF0aW9uLms4cy5pby92MSIsImtpbmQiOiJDbHVzdGVyUm9sZUJpbmRpbmciLCJtZXRhZGF0YSI6eyJuYW1lIjoiazhzLW1ldHJpY3Mtc20tcHJvbWV0aGV1cy1rOHMifSwicm9sZVJlZiI6eyJhcGlHcm91cCI6InJiYWMuYXV0aG9yaXphdGlvbi5rOHMuaW8iLCJraW5kIjoiQ2x1c3RlclJvbGUiLCJuYW1lIjoiazhzLW1ldHJpY3Mtc20tcHJvbWV0aGV1cy1rOHMifSwic3ViamVjdHMiOlt7ImtpbmQiOiJTZXJ2aWNlQWNjb3VudCIsIm5hbWUiOiJwcm9tZXRoZXVzLWs4cyIsIm5hbWVzcGFjZSI6Im9kZi1zdG9yYWdlIn1dfQ==
- type: olm.bundle.object
  value:
    data: eyJhcGlWZXJzaW9uIjoicmJhYy5hdXRob3JpemF0aW9uLms4cy5pby92MSIsImtpbmQiOiJDbHVzdGVyUm9sZSIsIm1ldGFkYXRhIjp7Im5hbWUiOiJrOHMtbWV0cmljcy1zbS1wcm9tZXRoZXVzLWs4cyJ9LCJydWxlcyI6W3siYXBpR3JvdXBzIjpbIiJdLCJyZXNvdXJjZXMiOlsibm9kZXMvbWV0cmljcyJdLCJ2ZXJicyI6WyJnZXQiXX0seyJub25SZXNvdXJjZVVSTHMiOlsiL21ldHJpY3MiXSwidmVyYnMiOlsiZ2V0Il19LHsiYXBpR3JvdXBzIjpbImF1dGhlbnRpY2F0aW9uLms4cy5pbyJdLCJyZXNvdXJjZXMiOlsidG9rZW5yZXZpZXdzIl0sInZlcmJzIjpbImNyZWF0ZSJdfSx7ImFwaUdyb3VwcyI6WyJhdXRob3JpemF0aW9uLms4cy5pbyJdLCJyZXNvdXJjZXMiOlsic3ViamVjdGFjY2Vzc3Jldmlld3MiXSwidmVyYnMiOlsiY3JlYXRlIl19LHsiYXBpR3JvdXBzIjpbIiJdLCJyZXNvdXJjZXMiOlsibmFtZXNwYWNlcyJdLCJ2ZXJicyI6WyJnZXQiXX0seyJhcGlHcm91cHMiOlsic2VjdXJpdHkub3BlbnNoaWZ0LmlvIl0sInJlc291cmNlTmFtZXMiOlsibm9ucm9vdCJdLCJyZXNvdXJjZXMiOlsic2VjdXJpdHljb250ZXh0Y29uc3RyYWludHMiXSwidmVyYnMiOlsidXNlIl19LHsiYXBpR3JvdXBzIjpbIiJdLCJyZXNvdXJjZXMiOlsicG9kcyIsImVuZHBvaW50cyIsInNlcnZpY2VzIl0sInZlcmJzIjpbImxpc3QiLCJ3YXRjaCIsImdldCJdfV19
- type: olm.bundle.object
  value:
    data: 
- type: olm.bundle.object
  value:
    data: eyJhcGlWZXJzaW9uIjoiYXBpZXh0ZW5zaW9ucy5rOHMuaW8vdjEiLCJraW5kIjoiQ3VzdG9tUmVzb3VyY2VEZWZpbml0aW9uIiwibWV0YWRhdGEiOnsiYW5ub3RhdGlvbnMiOnsiY29udHJvbGxlci1nZW4ua3ViZWJ1aWxkZXIuaW8vdmVyc2lvbiI6InYwLjE2LjEifSwibmFtZSI6Im9jc2luaXRpYWxpemF0aW9ucy5vY3Mub3BlbnNoaWZ0LmlvIn0sInNwZWMiOnsiZ3JvdXAiOiJvY3Mub3BlbnNoaWZ0LmlvIiwibmFtZXMiOnsia2luZCI6Ik9DU0luaXRpYWxpemF0aW9uIiwibGlzdEtpbmQiOiJPQ1NJbml0aWFsaXphdGlvbkxpc3QiLCJwbHVyYWwiOiJvY3Npbml0aWFsaXphdGlvbnMiLCJzaW5ndWxhciI6Im9jc2luaXRpYWxpemF0aW9uIn0sInNjb3BlIjoiTmFtZXNwYWNlZCIsInZlcnNpb25zIjpbeyJhZGRpdGlvbmFsUHJpbnRlckNvbHVtbnMiOlt7Impzb25QYXRoIjoiLm1ldGFkYXRhLmNyZWF0aW9uVGltZXN0YW1wIiwibmFtZSI6IkFnZSIsInR5cGUiOiJkYXRlIn0seyJkZXNjcmlwdGlvbiI6IkN1cnJlbnQgUGhhc2UiLCJqc29uUGF0aCI6Ii5zdGF0dXMucGhhc2UiLCJuYW1lIjoiUGhhc2UiLCJ0eXBlIjoic3RyaW5nIn0seyJqc29uUGF0aCI6Ii5tZXRhZGF0YS5jcmVhdGlvblRpbWVzdGFtcCIsIm5hbWUiOiJDcmVhdGVkIEF0IiwidHlwZSI6InN0cmluZyJ9XSwibmFtZSI6InYxIiwic2NoZW1hIjp7Im9wZW5BUElWM1NjaGVtYSI6eyJkZXNjcmlwdGlvbiI6Ik9DU0luaXRpYWxpemF0aW9uIHJlcHJlc2VudHMgdGhlIGluaXRpYWwgZGF0YSB0byBiZSBjcmVhdGVkIHdoZW4gdGhlIG9wZXJhdG9yIGlzIGluc3RhbGxlZC4iLCJwcm9wZXJ0aWVzIjp7ImFwaVZlcnNpb24iOnsiZGVzY3JpcHRpb24iOiJBUElWZXJzaW9uIGRlZmluZXMgdGhlIHZlcnNpb25lZCBzY2hlbWEgb2YgdGhpcyByZXByZXNlbnRhdGlvbiBvZiBhbiBvYmplY3QuXG5TZXJ2ZXJzIHNob3VsZCBjb252ZXJ0IHJlY29nbml6ZWQgc2NoZW1hcyB0byB0aGUgbGF0ZXN0IGludGVybmFsIHZhbHVlLCBhbmRcbm1heSByZWplY3QgdW5yZWNvZ25pemVkIHZhbHVlcy5cbk1vcmUgaW5mbzogaHR0cHM6Ly9naXQuazhzLmlvL2NvbW11bml0eS9jb250cmlidXRvcnMvZGV2ZWwvc2lnLWFyY2hpdGVjdHVyZS9hcGktY29udmVudGlvbnMubWQjcmVzb3VyY2VzIiwidHlwZSI6InN0cmluZyJ9LCJraW5kIjp7ImRlc2NyaXB0aW9uIjoiS2luZCBpcyBhIHN0cmluZyB2YWx1ZSByZXByZXNlbnRpbmcgdGhlIFJFU1QgcmVzb3VyY2UgdGhpcyBvYmplY3QgcmVwcmVzZW50cy5cblNlcnZlcnMgbWF5IGluZmVyIHRoaXMgZnJvbSB0aGUgZW5kcG9pbnQgdGhlIGNsaWVudCBzdWJtaXRzIHJlcXVlc3RzIHRvLlxuQ2Fubm90IGJlIHVwZGF0ZWQuXG5JbiBDYW1lbENhc2UuXG5Nb3JlIGluZm86IGh0dHBzOi8vZ2l0Lms4cy5pby9jb21tdW5pdHkvY29udHJpYnV0b3JzL2RldmVsL3NpZy1hcmNoaXRlY3R1cmUvYXBpLWNvbnZlbnRpb25zLm1kI3R5cGVzLWtpbmRzIiwidHlwZSI6InN0cmluZyJ9LCJtZXRhZGF0YSI6eyJ0eXBlIjoib2JqZWN0In0sInNwZWMiOnsiZGVzY3JpcHRpb24iOiJPQ1NJbml0aWFsaXphdGlvblNwZWMgZGVmaW5lcyB0aGUgZGVzaXJlZCBzdGF0ZSBvZiBPQ1NJbml0aWFsaXphdGlvbiIsInByb3BlcnRpZXMiOnsiZW5hYmxlQ2VwaFRvb2xzIjp7ImRlc2NyaXB0aW9uIjoiRW5hYmxlQ2VwaFRvb2xzIHRvZ2dsZXMgb24gd2hldGhlciBvciBub3QgdGhlIGNlcGggdG9vbHMgcG9kXG5zaG91bGQgYmUgZGVwbG95ZWQuXG5EZWZhdWx0cyB0byBmYWxzZSIsInR5cGUiOiJib29sZWFuIn0sInRvbGVyYXRpb25zIjp7ImRlc2NyaXB0aW9uIjoiVG9sZXJhdGlvbnMgaWYgc3BlY2lmaWVkIHNldCB0b29sYm94IGNlcGggdG9vbHMgcG9kIHRvbGVyYXRpb25zXG5EZWZhdWx0cyB0byBlbXB0eSIsIml0ZW1zIjp7ImRlc2NyaXB0aW9uIjoiVGhlIHBvZCB0aGlzIFRvbGVyYXRpb24gaXMgYXR0YWNoZWQgdG8gdG9sZXJhdGVzIGFueSB0YWludCB0aGF0IG1hdGNoZXNcbnRoZSB0cmlwbGUgXHUwMDNja2V5LHZhbHVlLGVmZmVjdFx1MDAzZSB1c2luZyB0aGUgbWF0Y2hpbmcgb3BlcmF0b3IgXHUwMDNjb3BlcmF0b3JcdTAwM2UuIiwicHJvcGVydGllcyI6eyJlZmZlY3QiOnsiZGVzY3JpcHRpb24iOiJFZmZlY3QgaW5kaWNhdGVzIHRoZSB0YWludCBlZmZlY3QgdG8gbWF0Y2guIEVtcHR5IG1lYW5zIG1hdGNoIGFsbCB0YWludCBlZmZlY3RzLlxuV2hlbiBzcGVjaWZpZWQsIGFsbG93ZWQgdmFsdWVzIGFyZSBOb1NjaGVkdWxlLCBQcmVmZXJOb1NjaGVkdWxlIGFuZCBOb0V4ZWN1dGUuIiwidHlwZSI6InN0cmluZyJ9LCJrZXkiOnsiZGVzY3JpcHRpb24iOiJLZXkgaXMgdGhlIHRhaW50IGtleSB0aGF0IHRoZSB0b2xlcmF0aW9uIGFwcGxpZXMgdG8uIEVtcHR5IG1lYW5zIG1hdGNoIGFsbCB0YWludCBrZXlzLlxuSWYgdGhlIGtleSBpcyBlbXB0eSwgb3BlcmF0b3IgbXVzdCBiZSBFeGlzdHM7IHRoaXMgY29tYmluYXRpb24gbWVhbnMgdG8gbWF0Y2ggYWxsIHZhbHVlcyBhbmQgYWxsIGtleXMuIiwidHlwZSI6InN0cmluZyJ9LCJvcGVyYXRvciI6eyJkZXNjcmlwdGlvbiI6Ik9wZXJhdG9yIHJlcHJlc2VudHMgYSBrZXkncyByZWxhdGlvbnNoaXAgdG8gdGhlIHZhbHVlLlxuVmFsaWQgb3BlcmF0b3JzIGFyZSBFeGlzdHMgYW5kIEVxdWFsLiBEZWZhdWx0cyB0byBFcXVhbC5cbkV4aXN0cyBpcyBlcXVpdmFsZW50IHRvIHdpbGRjYXJkIGZvciB2YWx1ZSwgc28gdGhhdCBhIHBvZCBjYW5cbnRvbGVyYXRlIGFsbCB0YWludHMgb2YgYSBwYXJ0aWN1bGFyIGNhdGVnb3J5LiIsInR5cGUiOiJzdHJpbmcifSwidG9sZXJhdGlvblNlY29uZHMiOnsiZGVzY3JpcHRpb24iOiJUb2xlcmF0aW9uU2Vjb25kcyByZXByZXNlbnRzIHRoZSBwZXJpb2Qgb2YgdGltZSB0aGUgdG9sZXJhdGlvbiAod2hpY2ggbXVzdCBiZVxub2YgZWZmZWN0IE5vRXhlY3V0ZSwgb3RoZXJ3aXNlIHRoaXMgZmllbGQgaXMgaWdub3JlZCkgdG9sZXJhdGVzIHRoZSB0YWludC4gQnkgZGVmYXVsdCxcbml0IGlzIG5vdCBzZXQsIHdoaWNoIG1lYW5zIHRvbGVyYXRlIHRoZSB0YWludCBmb3JldmVyIChkbyBub3QgZXZpY3QpLiBaZXJvIGFuZFxubmVnYXRpdmUgdmFsdWVzIHdpbGwgYmUgdHJlYXRlZCBhcyAwIChldmljdCBpbW1lZGlhdGVseSkgYnkgdGhlIHN5c3RlbS4iLCJmb3JtYXQiOiJpbnQ2NCIsInR5cGUiOiJpbnRlZ2VyIn0sInZhbHVlIjp7ImRlc2NyaXB0aW9uIjoiVmFsdWUgaXMgdGhlIHRhaW50IHZhbHVlIHRoZSB0b2xlcmF0aW9uIG1hdGNoZXMgdG8uXG5JZiB0aGUgb3BlcmF0b3IgaXMgRXhpc3RzLCB0aGUgdmFsdWUgc2hvdWxkIGJlIGVtcHR5LCBvdGhlcndpc2UganVzdCBhIHJlZ3VsYXIgc3RyaW5nLiIsInR5cGUiOiJzdHJpbmcifX0sInR5cGUiOiJvYmplY3QifSwidHlwZSI6ImFycmF5In19LCJ0eXBlIjoib2JqZWN0In0sInN0YXR1cyI6eyJkZXNjcmlwdGlvbiI6Ik9DU0luaXRpYWxpemF0aW9uU3RhdHVzIGRlZmluZXMgdGhlIG9ic2VydmVkIHN0YXRlIG9mIE9DU0luaXRpYWxpemF0aW9uIiwicHJvcGVydGllcyI6eyJjb25kaXRpb25zIjp7ImRlc2NyaXB0aW9uIjoiQ29uZGl0aW9ucyBkZXNjcmliZXMgdGhlIHN0YXRlIG9mIHRoZSBPQ1NJbml0aWFsaXphdGlvbiByZXNvdXJjZS4iLCJpdGVtcyI6eyJkZXNjcmlwdGlvbiI6IkNvbmRpdGlvbiByZXByZXNlbnRzIHRoZSBzdGF0ZSBvZiB0aGUgb3BlcmF0b3Inc1xucmVjb25jaWxpYXRpb24gZnVuY3Rpb25hbGl0eS4iLCJwcm9wZXJ0aWVzIjp7Imxhc3RIZWFydGJlYXRUaW1lIjp7ImZvcm1hdCI6ImRhdGUtdGltZSIsInR5cGUiOiJzdHJpbmcifSwibGFzdFRyYW5zaXRpb25UaW1lIjp7ImZvcm1hdCI6ImRhdGUtdGltZSIsInR5cGUiOiJzdHJpbmcifSwibWVzc2FnZSI6eyJ0eXBlIjoic3RyaW5nIn0sInJlYXNvbiI6eyJ0eXBlIjoic3RyaW5nIn0sInN0YXR1cyI6eyJ0eXBlIjoic3RyaW5nIn0sInR5cGUiOnsiZGVzY3JpcHRpb24iOiJDb25kaXRpb25UeXBlIGlzIHRoZSBzdGF0ZSBvZiB0aGUgb3BlcmF0b3IncyByZWNvbmNpbGlhdGlvbiBmdW5jdGlvbmFsaXR5LiIsInR5cGUiOiJzdHJpbmcifX0sInJlcXVpcmVkIjpbInN0YXR1cyIsInR5cGUiXSwidHlwZSI6Im9iamVjdCJ9LCJ0eXBlIjoiYXJyYXkifSwiZXJyb3JNZXNzYWdlIjp7InR5cGUiOiJzdHJpbmcifSwicGhhc2UiOnsiZGVzY3JpcHRpb24iOiJQaGFzZSBkZXNjcmliZXMgdGhlIFBoYXNlIG9mIE9DU0luaXRpYWxpemF0aW9uXG5UaGlzIGlzIHVzZWQgYnkgT0xNIFVJIHRvIHByb3ZpZGUgc3RhdHVzIGluZm9ybWF0aW9uXG50byB0aGUgdXNlciIsInR5cGUiOiJzdHJpbmcifSwicmVsYXRlZE9iamVjdHMiOnsiZGVzY3JpcHRpb24iOiJSZWxhdGVkT2JqZWN0cyBpcyBhIGxpc3Qgb2Ygb2JqZWN0cyBjcmVhdGVkIGFuZCBtYWludGFpbmVkIGJ5IHRoaXNcbm9wZXJhdG9yLiBPYmplY3QgcmVmZXJlbmNlcyB3aWxsIGJlIGFkZGVkIHRvIHRoaXMgbGlzdCBhZnRlciB0aGV5IGhhdmVcbmJlZW4gY3JlYXRlZCBBTkQgZm91bmQgaW4gdGhlIGNsdXN0ZXIuIiwiaXRlbXMiOnsiZGVzY3JpcHRpb24iOiJPYmplY3RSZWZlcmVuY2UgY29udGFpbnMgZW5vdWdoIGluZm9ybWF0aW9uIHRvIGxldCB5b3UgaW5zcGVjdCBvciBtb2RpZnkgdGhlIHJlZmVycmVkIG9iamVjdC4iLCJwcm9wZXJ0aWVzIjp7ImFwaVZlcnNpb24iOnsiZGVzY3JpcHRpb24iOiJBUEkgdmVyc2lvbiBvZiB0aGUgcmVmZXJlbnQuIiwidHlwZSI6InN0cmluZyJ9LCJmaWVsZFBhdGgiOnsiZGVzY3JpcHRpb24iOiJJZiByZWZlcnJpbmcgdG8gYSBwaWVjZSBvZiBhbiBvYmplY3QgaW5zdGVhZCBvZiBhbiBlbnRpcmUgb2JqZWN0LCB0aGlzIHN0cmluZ1xuc2hvdWxkIGNvbnRhaW4gYSB2YWxpZCBKU09OL0dvIGZpZWxkIGFjY2VzcyBzdGF0ZW1lbnQsIHN1Y2ggYXMgZGVzaXJlZFN0YXRlLm1hbmlmZXN0LmNvbnRhaW5lcnNbMl0uXG5Gb3IgZXhhbXBsZSwgaWYgdGhlIG9iamVjdCByZWZlcmVuY2UgaXMgdG8gYSBjb250YWluZXIgd2l0aGluIGEgcG9kLCB0aGlzIHdvdWxkIHRha2Ugb24gYSB2YWx1ZSBsaWtlOlxuXCJzcGVjLmNvbnRhaW5lcnN7bmFtZX1cIiAod2hlcmUgXCJuYW1lXCIgcmVmZXJzIHRvIHRoZSBuYW1lIG9mIHRoZSBjb250YWluZXIgdGhhdCB0cmlnZ2VyZWRcbnRoZSBldmVudCkgb3IgaWYgbm8gY29udGFpbmVyIG5hbWUgaXMgc3BlY2lmaWVkIFwic3BlYy5jb250YWluZXJzWzJdXCIgKGNvbnRhaW5lciB3aXRoXG5pbmRleCAyIGluIHRoaXMgcG9kKS4gVGhpcyBzeW50YXggaXMgY2hvc2VuIG9ubHkgdG8gaGF2ZSBzb21lIHdlbGwtZGVmaW5lZCB3YXkgb2ZcbnJlZmVyZW5jaW5nIGEgcGFydCBvZiBhbiBvYmplY3QuIiwidHlwZSI6InN0cmluZyJ9LCJraW5kIjp7ImRlc2NyaXB0aW9uIjoiS2luZCBvZiB0aGUgcmVmZXJlbnQuXG5Nb3JlIGluZm86IGh0dHBzOi8vZ2l0Lms4cy5pby9jb21tdW5pdHkvY29udHJpYnV0b3JzL2RldmVsL3NpZy1hcmNoaXRlY3R1cmUvYXBpLWNvbnZlbnRpb25zLm1kI3R5cGVzLWtpbmRzIiwidHlwZSI6InN0cmluZyJ9LCJuYW1lIjp7ImRlc2NyaXB0aW9uIjoiTmFtZSBvZiB0aGUgcmVmZXJlbnQuXG5Nb3JlIGluZm86IGh0dHBzOi8va3ViZXJuZXRlcy5pby9kb2NzL2NvbmNlcHRzL292ZXJ2aWV3L3dvcmtpbmctd2l0aC1vYmplY3RzL25hbWVzLyNuYW1lcyIsInR5cGUiOiJzdHJpbmcifSwibmFtZXNwYWNlIjp7ImRlc2NyaXB0aW9uIjoiTmFtZXNwYWNlIG9mIHRoZSByZWZlcmVudC5cbk1vcmUgaW5mbzogaHR0cHM6Ly9rdWJlcm5ldGVzLmlvL2RvY3MvY29uY2VwdHMvb3ZlcnZpZXcvd29ya2luZy13aXRoLW9iamVjdHMvbmFtZXNwYWNlcy8iLCJ0eXBlIjoic3RyaW5nIn0sInJlc291cmNlVmVyc2lvbiI6eyJkZXNjcmlwdGlvbiI6IlNwZWNpZmljIHJlc291cmNlVmVyc2lvbiB0byB3aGljaCB0aGlzIHJlZmVyZW5jZSBpcyBtYWRlLCBpZiBhbnkuXG5Nb3JlIGluZm86IGh0dHBzOi8vZ2l0Lms4cy5pby9jb21tdW5pdHkvY29udHJpYnV0b3JzL2RldmVsL3NpZy1hcmNoaXRlY3R1cmUvYXBpLWNvbnZlbnRpb25zLm1kI2NvbmN1cnJlbmN5LWNvbnRyb2wtYW5kLWNvbnNpc3RlbmN5IiwidHlwZSI6InN0cmluZyJ9LCJ1aWQiOnsiZGVzY3JpcHRpb24iOiJVSUQgb2YgdGhlIHJlZmVyZW50LlxuTW9yZSBpbmZvOiBodHRwczovL2t1YmVybmV0ZXMuaW8vZG9jcy9jb25jZXB0cy9vdmVydmlldy93b3JraW5nLXdpdGgtb2JqZWN0cy9uYW1lcy8jdWlkcyIsInR5cGUiOiJzdHJpbmcifX0sInR5cGUiOiJvYmplY3QiLCJ4LWt1YmVybmV0ZXMtbWFwLXR5cGUiOiJhdG9taWMifSwidHlwZSI6ImFycmF5In0sInJvb2tDZXBoT3BlcmF0b3JDb25maWciOnsicHJvcGVydGllcyI6eyJjc2lQbHVnaW5Ub2xlcmF0aW9uc01vZGlmaWVkIjp7ImRlc2NyaXB0aW9uIjoiQ3NpUGx1Z2luVG9sZXJhdGlvbnNNb2RpZmllZCBpbmRpY2F0ZXMgaWYgQ3NpUGx1Z2luVG9sZXJhdGlvbnMgYXJlIGFkZGVkIHRvIHRoZSBjb25maWdtYXAgdmlhIGNvbnRyb2xsZXIiLCJ0eXBlIjoiYm9vbGVhbiJ9LCJjc2lQcm92aXNpb25lclRvbGVyYXRpb25zTW9kaWZpZWQiOnsiZGVzY3JpcHRpb24iOiJDc2lQcm92aXNpb25lclRvbGVyYXRpb25zTW9kaWZpZWQgaW5kaWNhdGVzIGlmIENzaVByb3Zpc2lvbmVyVG9sZXJhdGlvbnMgYXJlIGFkZGVkIHRvIHRoZSBjb25maWdtYXAgdmlhIGNvbnRyb2xsZXIiLCJ0eXBlIjoiYm9vbGVhbiJ9fSwidHlwZSI6Im9iamVjdCJ9LCJyb29rQ2VwaE9wZXJhdG9yQ29uZmlnQ3JlYXRlZCI6eyJ0eXBlIjoiYm9vbGVhbiJ9LCJzQ0NzQ3JlYXRlZCI6eyJ0eXBlIjoiYm9vbGVhbiJ9fSwidHlwZSI6Im9iamVjdCJ9fSwidHlwZSI6Im9iamVjdCJ9fSwic2VydmVkIjp0cnVlLCJzdG9yYWdlIjp0cnVlLCJzdWJyZXNvdXJjZXMiOnsic3RhdHVzIjp7fX19XX19
- type: olm.bundle.object
  value:
    data: eyJhcGlWZXJzaW9uIjoicmJhYy5hdXRob3JpemF0aW9uLms4cy5pby92MSIsImtpbmQiOiJDbHVzdGVyUm9sZUJpbmRpbmciLCJtZXRhZGF0YSI6eyJuYW1lIjoib2RmLXByb21ldGhldXMifSwicm9sZVJlZiI6eyJhcGlHcm91cCI6InJiYWMuYXV0aG9yaXphdGlvbi5rOHMuaW8iLCJraW5kIjoiQ2x1c3RlclJvbGUiLCJuYW1lIjoib2RmLXByb21ldGhldXMifSwic3ViamVjdHMiOlt7ImtpbmQiOiJTZXJ2aWNlQWNjb3VudCIsIm5hbWUiOiJwcm9tZXRoZXVzLWs4cyIsIm5hbWVzcGFjZSI6Im9kZi1zdG9yYWdlIn1dfQ==
- type: olm.bundle.object
  value:
    data: eyJhcGlWZXJzaW9uIjoicmJhYy5hdXRob3JpemF0aW9uLms4cy5pby92MSIsImtpbmQiOiJDbHVzdGVyUm9sZSIsIm1ldGFkYXRhIjp7Im5hbWUiOiJvZGYtcHJvbWV0aGV1cyJ9LCJydWxlcyI6W3siYXBpR3JvdXBzIjpbIiJdLCJyZXNvdXJjZXMiOlsibm9kZXMiLCJub2Rlcy9tZXRyaWNzIiwic2VydmljZXMiLCJlbmRwb2ludHMiLCJwb2RzIl0sInZlcmJzIjpbImdldCIsImxpc3QiLCJ3YXRjaCJdfSx7ImFwaUdyb3VwcyI6WyIiXSwicmVzb3VyY2VzIjpbImNvbmZpZ21hcHMiXSwidmVyYnMiOlsiZ2V0Il19LHsiYXBpR3JvdXBzIjpbIm5ldHdvcmtpbmcuazhzLmlvIl0sInJlc291cmNlcyI6WyJpbmdyZXNzZXMiXSwidmVyYnMiOlsiZ2V0IiwibGlzdCIsIndhdGNoIl19LHsibm9uUmVzb3VyY2VVUkxzIjpbIi9tZXRyaWNzIl0sInZlcmJzIjpbImdldCJdfV19
- type: olm.bundle.object
  value:
    data: eyJhcGlWZXJzaW9uIjoicmJhYy5hdXRob3JpemF0aW9uLms4cy5pby92MSIsImtpbmQiOiJSb2xlQmluZGluZyIsIm1ldGFkYXRhIjp7Im5hbWUiOiJvbmJvYXJkaW5nLXZhbGlkYXRpb24ta2V5cy1nZW5lcmF0b3IifSwicm9sZVJlZiI6eyJhcGlHcm91cCI6InJiYWMuYXV0aG9yaXphdGlvbi5rOHMuaW8iLCJraW5kIjoiUm9sZSIsIm5hbWUiOiJvbmJvYXJkaW5nLXZhbGlkYXRpb24ta2V5cy1nZW5lcmF0b3IifSwic3ViamVjdHMiOlt7ImtpbmQiOiJTZXJ2aWNlQWNjb3VudCIsIm5hbWUiOiJvbmJvYXJkaW5nLXZhbGlkYXRpb24ta2V5cy1nZW5lcmF0b3IifV19
- type: olm.bundle.object
  value:
    data: eyJhcGlWZXJzaW9uIjoicmJhYy5hdXRob3JpemF0aW9uLms4cy5pby92MSIsImtpbmQiOiJSb2xlIiwibWV0YWRhdGEiOnsibmFtZSI6Im9uYm9hcmRpbmctdmFsaWRhdGlvbi1rZXlzLWdlbmVyYXRvciJ9LCJydWxlcyI6W3siYXBpR3JvdXBzIjpbIiJdLCJyZXNvdXJjZXMiOlsic2VjcmV0cyJdLCJ2ZXJicyI6WyJnZXQiLCJsaXN0IiwiY3JlYXRlIiwiZGVsZXRlIl19LHsiYXBpR3JvdXBzIjpbIm9jcy5vcGVuc2hpZnQuaW8iXSwicmVzb3VyY2VzIjpbInN0b3JhZ2VjbHVzdGVycyJdLCJ2ZXJicyI6WyJnZXQiLCJsaXN0Il19XX0=
- type: olm.bundle.object
  value:
    data: eyJhcGlWZXJzaW9uIjoidjEiLCJraW5kIjoiU2VydmljZUFjY291bnQiLCJtZXRhZGF0YSI6eyJuYW1lIjoib25ib2FyZGluZy12YWxpZGF0aW9uLWtleXMtZ2VuZXJhdG9yIn19
- type: olm.bundle.object
  value:
    data: eyJhcGlWZXJzaW9uIjoicmJhYy5hdXRob3JpemF0aW9uLms4cy5pby92MSIsImtpbmQiOiJSb2xlQmluZGluZyIsIm1ldGFkYXRhIjp7Im5hbWUiOiJvY3MtcHJvdmlkZXItc2VydmVyIn0sInJvbGVSZWYiOnsiYXBpR3JvdXAiOiJyYmFjLmF1dGhvcml6YXRpb24uazhzLmlvIiwia2luZCI6IlJvbGUiLCJuYW1lIjoib2NzLXByb3ZpZGVyLXNlcnZlciJ9LCJzdWJqZWN0cyI6W3sia2luZCI6IlNlcnZpY2VBY2NvdW50IiwibmFtZSI6Im9jcy1wcm92aWRlci1zZXJ2ZXIifV19
- type: olm.bundle.object
  value:
    data: eyJhcGlWZXJzaW9uIjoicmJhYy5hdXRob3JpemF0aW9uLms4cy5pby92MSIsImtpbmQiOiJSb2xlIiwibWV0YWRhdGEiOnsibmFtZSI6Im9jcy1wcm92aWRlci1zZXJ2ZXIifSwicnVsZXMiOlt7ImFwaUdyb3VwcyI6WyIiXSwicmVzb3VyY2VzIjpbImNvbmZpZ21hcHMiLCJzZWNyZXRzIiwic2VydmljZXMiXSwidmVyYnMiOlsiZ2V0Il19LHsiYXBpR3JvdXBzIjpbImNlcGgucm9vay5pbyJdLCJyZXNvdXJjZXMiOlsiY2VwaGZpbGVzeXN0ZW1zdWJ2b2x1bWVncm91cHMiLCJjZXBoYmxvY2twb29scmFkb3NuYW1lc3BhY2VzIiwiY2VwaGJsb2NrcG9vbHMiLCJjZXBocmJkbWlycm9ycyIsImNlcGhjbHVzdGVycyJdLCJ2ZXJicyI6WyJnZXQiLCJsaXN0Il19LHsiYXBpR3JvdXBzIjpbIm9jcy5vcGVuc2hpZnQuaW8iXSwicmVzb3VyY2VzIjpbInN0b3JhZ2Vjb25zdW1lcnMiLCJzdG9yYWdlY29uc3VtZXJzL2ZpbmFsaXplcnMiLCJzdG9yYWdlY29uc3VtZXJzL3N0YXR1cyJdLCJ2ZXJicyI6WyJnZXQiLCJsaXN0IiwiY3JlYXRlIiwiZGVsZXRlIiwidXBkYXRlIiwicGF0Y2giXX0seyJhcGlHcm91cHMiOlsiY2VwaC5yb29rLmlvIl0sInJlc291cmNlcyI6WyJjZXBoY2xpZW50cyJdLCJ2ZXJicyI6WyJnZXQiXX0seyJhcGlHcm91cHMiOlsiIl0sInJlc291cmNlcyI6WyJwb2RzIl0sInZlcmJzIjpbImdldCIsImxpc3QiXX0seyJhcGlHcm91cHMiOlsib2NzLm9wZW5zaGlmdC5pbyJdLCJyZXNvdXJjZXMiOlsic3RvcmFnZXJlcXVlc3RzIl0sInZlcmJzIjpbImdldCIsImxpc3QiLCJjcmVhdGUiLCJkZWxldGUiXX0seyJhcGlHcm91cHMiOlsib3BlcmF0b3JzLmNvcmVvcy5jb20iXSwicmVzb3VyY2VzIjpbInN1YnNjcmlwdGlvbnMiXSwidmVyYnMiOlsiZ2V0IiwibGlzdCJdfSx7ImFwaUdyb3VwcyI6WyJvY3Mub3BlbnNoaWZ0LmlvIl0sInJlc291cmNlcyI6WyJzdG9yYWdlY2x1c3RlcnMiXSwidmVyYnMiOlsiZ2V0IiwibGlzdCJdfSx7ImFwaUdyb3VwcyI6WyJyb3V0ZS5vcGVuc2hpZnQuaW8iXSwicmVzb3VyY2VzIjpbInJvdXRlcyJdLCJ2ZXJicyI6WyJnZXQiLCJsaXN0Il19LHsiYXBpR3JvdXBzIjpbIm9jcy5vcGVuc2hpZnQuaW8iXSwicmVzb3VyY2VzIjpbInN0b3JhZ2VjbHVzdGVycGVlcnMiXSwidmVyYnMiOlsiZ2V0IiwibGlzdCJdfV19
- type: olm.bundle.object
  value:
    data: eyJhcGlWZXJzaW9uIjoidjEiLCJraW5kIjoiU2VydmljZUFjY291bnQiLCJtZXRhZGF0YSI6eyJuYW1lIjoib2NzLXByb3ZpZGVyLXNlcnZlciJ9fQ==
- type: olm.bundle.object
  value:
    data: eyJhcGlWZXJzaW9uIjoicmJhYy5hdXRob3JpemF0aW9uLms4cy5pby92MSIsImtpbmQiOiJDbHVzdGVyUm9sZSIsIm1ldGFkYXRhIjp7Im5hbWUiOiJyb29rLWNlcGgtbWV0cmljcyJ9LCJydWxlcyI6W3siYXBpR3JvdXBzIjpbIiJdLCJyZXNvdXJjZXMiOlsic2VydmljZXMiLCJlbmRwb2ludHMiLCJwb2RzIl0sInZlcmJzIjpbImdldCIsImxpc3QiLCJ3YXRjaCJdfV19
- type: olm.bundle.object
  value:
    data: eyJhcGlWZXJzaW9uIjoicmJhYy5hdXRob3JpemF0aW9uLms4cy5pby92MSIsImtpbmQiOiJDbHVzdGVyUm9sZSIsIm1ldGFkYXRhIjp7Im5hbWUiOiJyb29rLWNlcGgtbW9uaXRvciJ9LCJydWxlcyI6W3siYXBpR3JvdXBzIjpbIm1vbml0b3JpbmcuY29yZW9zLmNvbSJdLCJyZXNvdXJjZXMiOlsic2VydmljZW1vbml0b3JzIl0sInZlcmJzIjpbImdldCIsImxpc3QiLCJ3YXRjaCIsImNyZWF0ZSIsInVwZGF0ZSIsImRlbGV0ZSJdfV19
- type: olm.bundle.object
  value:
    data: eyJhcGlWZXJzaW9uIjoicmJhYy5hdXRob3JpemF0aW9uLms4cy5pby92MSIsImtpbmQiOiJSb2xlIiwibWV0YWRhdGEiOnsibmFtZSI6InJvb2stY2VwaC1tZXRyaWNzIn0sInJ1bGVzIjpbeyJhcGlHcm91cHMiOlsiIl0sInJlc291cmNlcyI6WyJzZXJ2aWNlcyIsImVuZHBvaW50cyIsInBvZHMiXSwidmVyYnMiOlsiZ2V0IiwibGlzdCIsIndhdGNoIl19XX0=
- type: olm.bundle.object
  value:
    data: eyJhcGlWZXJzaW9uIjoicmJhYy5hdXRob3JpemF0aW9uLms4cy5pby92MSIsImtpbmQiOiJSb2xlQmluZGluZyIsIm1ldGFkYXRhIjp7Im5hbWUiOiJyb29rLWNlcGgtbWV0cmljcyJ9LCJyb2xlUmVmIjp7ImFwaUdyb3VwIjoicmJhYy5hdXRob3JpemF0aW9uLms4cy5pbyIsImtpbmQiOiJSb2xlIiwibmFtZSI6InJvb2stY2VwaC1tZXRyaWNzIn0sInN1YmplY3RzIjpbeyJraW5kIjoiU2VydmljZUFjY291bnQiLCJuYW1lIjoicHJvbWV0aGV1cy1rOHMiLCJuYW1lc3BhY2UiOiJvcGVuc2hpZnQtbW9uaXRvcmluZyJ9XX0=
- type: olm.bundle.object
  value:
    data: eyJhcGlWZXJzaW9uIjoicmJhYy5hdXRob3JpemF0aW9uLms4cy5pby92MSIsImtpbmQiOiJDbHVzdGVyUm9sZSIsIm1ldGFkYXRhIjp7Im5hbWUiOiJyb29rLWNlcGgtbW9uaXRvci1tZ3IifSwicnVsZXMiOlt7ImFwaUdyb3VwcyI6WyJtb25pdG9yaW5nLmNvcmVvcy5jb20iXSwicmVzb3VyY2VzIjpbInNlcnZpY2Vtb25pdG9ycyJdLCJ2ZXJicyI6WyJnZXQiLCJsaXN0IiwiY3JlYXRlIiwidXBkYXRlIl19XX0=
- type: olm.bundle.object
  value:
    data: eyJhcGlWZXJzaW9uIjoicmJhYy5hdXRob3JpemF0aW9uLms4cy5pby92MSIsImtpbmQiOiJDbHVzdGVyUm9sZUJpbmRpbmciLCJtZXRhZGF0YSI6eyJuYW1lIjoicm9vay1jZXBoLW1ldHJpY3MifSwicm9sZVJlZiI6eyJhcGlHcm91cCI6InJiYWMuYXV0aG9yaXphdGlvbi5rOHMuaW8iLCJraW5kIjoiQ2x1c3RlclJvbGUiLCJuYW1lIjoicm9vay1jZXBoLW1ldHJpY3MifSwic3ViamVjdHMiOlt7ImtpbmQiOiJTZXJ2aWNlQWNjb3VudCIsIm5hbWUiOiJwcm9tZXRoZXVzLWs4cyIsIm5hbWVzcGFjZSI6Im9wZW5zaGlmdC1tb25pdG9yaW5nIn1dfQ==
- type: olm.bundle.object
  value:
    data: eyJhcGlWZXJzaW9uIjoicmJhYy5hdXRob3JpemF0aW9uLms4cy5pby92MSIsImtpbmQiOiJSb2xlIiwibWV0YWRhdGEiOnsibmFtZSI6InJvb2stY2VwaC1tb25pdG9yIn0sInJ1bGVzIjpbeyJhcGlHcm91cHMiOlsibW9uaXRvcmluZy5jb3Jlb3MuY29tIl0sInJlc291cmNlcyI6WyIqIl0sInZlcmJzIjpbIioiXX1dfQ==
- type: olm.bundle.object
  value:
    data: eyJhcGlWZXJzaW9uIjoicmJhYy5hdXRob3JpemF0aW9uLms4cy5pby92MSIsImtpbmQiOiJSb2xlQmluZGluZyIsIm1ldGFkYXRhIjp7Im5hbWUiOiJyb29rLWNlcGgtbW9uaXRvciJ9LCJyb2xlUmVmIjp7ImFwaUdyb3VwIjoicmJhYy5hdXRob3JpemF0aW9uLms4cy5pbyIsImtpbmQiOiJSb2xlIiwibmFtZSI6InJvb2stY2VwaC1tb25pdG9yIn0sInN1YmplY3RzIjpbeyJraW5kIjoiU2VydmljZUFjY291bnQiLCJuYW1lIjoicm9vay1jZXBoLXN5c3RlbSJ9XX0=
- type: olm.bundle.object
  value:
    data: 
- type: olm.bundle.object
  value:
    data: 
- type: olm.bundle.object
  value:
    data: eyJhcGlWZXJzaW9uIjoiYXBpZXh0ZW5zaW9ucy5rOHMuaW8vdjEiLCJraW5kIjoiQ3VzdG9tUmVzb3VyY2VEZWZpbml0aW9uIiwibWV0YWRhdGEiOnsiYW5ub3RhdGlvbnMiOnsiY29udHJvbGxlci1nZW4ua3ViZWJ1aWxkZXIuaW8vdmVyc2lvbiI6InYwLjE2LjEifSwibmFtZSI6InN0b3JhZ2VjbHVzdGVycGVlcnMub2NzLm9wZW5zaGlmdC5pbyJ9LCJzcGVjIjp7Imdyb3VwIjoib2NzLm9wZW5zaGlmdC5pbyIsIm5hbWVzIjp7ImtpbmQiOiJTdG9yYWdlQ2x1c3RlclBlZXIiLCJsaXN0S2luZCI6IlN0b3JhZ2VDbHVzdGVyUGVlckxpc3QiLCJwbHVyYWwiOiJzdG9yYWdlY2x1c3RlcnBlZXJzIiwic2luZ3VsYXIiOiJzdG9yYWdlY2x1c3RlcnBlZXIifSwic2NvcGUiOiJOYW1lc3BhY2VkIiwidmVyc2lvbnMiOlt7Im5hbWUiOiJ2MSIsInNjaGVtYSI6eyJvcGVuQVBJVjNTY2hlbWEiOnsiZGVzY3JpcHRpb24iOiJTdG9yYWdlQ2x1c3RlclBlZXIgaXMgdGhlIFNjaGVtYSBmb3IgdGhlIHN0b3JhZ2VjbHVzdGVycGVlcnMgQVBJIiwicHJvcGVydGllcyI6eyJhcGlWZXJzaW9uIjp7ImRlc2NyaXB0aW9uIjoiQVBJVmVyc2lvbiBkZWZpbmVzIHRoZSB2ZXJzaW9uZWQgc2NoZW1hIG9mIHRoaXMgcmVwcmVzZW50YXRpb24gb2YgYW4gb2JqZWN0LlxuU2VydmVycyBzaG91bGQgY29udmVydCByZWNvZ25pemVkIHNjaGVtYXMgdG8gdGhlIGxhdGVzdCBpbnRlcm5hbCB2YWx1ZSwgYW5kXG5tYXkgcmVqZWN0IHVucmVjb2duaXplZCB2YWx1ZXMuXG5Nb3JlIGluZm86IGh0dHBzOi8vZ2l0Lms4cy5pby9jb21tdW5pdHkvY29udHJpYnV0b3JzL2RldmVsL3NpZy1hcmNoaXRlY3R1cmUvYXBpLWNvbnZlbnRpb25zLm1kI3Jlc291cmNlcyIsInR5cGUiOiJzdHJpbmcifSwia2luZCI6eyJkZXNjcmlwdGlvbiI6IktpbmQgaXMgYSBzdHJpbmcgdmFsdWUgcmVwcmVzZW50aW5nIHRoZSBSRVNUIHJlc291cmNlIHRoaXMgb2JqZWN0IHJlcHJlc2VudHMuXG5TZXJ2ZXJzIG1heSBpbmZlciB0aGlzIGZyb20gdGhlIGVuZHBvaW50IHRoZSBjbGllbnQgc3VibWl0cyByZXF1ZXN0cyB0by5cbkNhbm5vdCBiZSB1cGRhdGVkLlxuSW4gQ2FtZWxDYXNlLlxuTW9yZSBpbmZvOiBodHRwczovL2dpdC5rOHMuaW8vY29tbXVuaXR5L2NvbnRyaWJ1dG9ycy9kZXZlbC9zaWctYXJjaGl0ZWN0dXJlL2FwaS1jb252ZW50aW9ucy5tZCN0eXBlcy1raW5kcyIsInR5cGUiOiJzdHJpbmcifSwibWV0YWRhdGEiOnsidHlwZSI6Im9iamVjdCJ9LCJzcGVjIjp7ImRlc2NyaXB0aW9uIjoiU3RvcmFnZUNsdXN0ZXJQZWVyU3BlYyBkZWZpbmVzIHRoZSBkZXNpcmVkIHN0YXRlIG9mIFN0b3JhZ2VDbHVzdGVyUGVlciIsInByb3BlcnRpZXMiOnsiYXBpRW5kcG9pbnQiOnsiZGVzY3JpcHRpb24iOiJBcGlFbmRwb2ludCBpcyB0aGUgVVJJIG9mIHRoZSBPREYgYXBpIHNlcnZlciIsInR5cGUiOiJzdHJpbmcifSwib25ib2FyZGluZ1Rva2VuIjp7ImRlc2NyaXB0aW9uIjoiT25ib2FyZGluZ1Rva2VuIGhvbGRzIGFuIGlkZW50aXR5IGluZm9ybWF0aW9uIHJlcXVpcmVkIGJ5IHRoZSBsb2NhbCBPREYgY2x1c3RlciB0byBvbmJvYXJkLiIsInR5cGUiOiJzdHJpbmcifX0sInJlcXVpcmVkIjpbImFwaUVuZHBvaW50Iiwib25ib2FyZGluZ1Rva2VuIl0sInR5cGUiOiJvYmplY3QifSwic3RhdHVzIjp7ImRlc2NyaXB0aW9uIjoiU3RvcmFnZUNsdXN0ZXJQZWVyU3RhdHVzIGRlZmluZXMgdGhlIG9ic2VydmVkIHN0YXRlIG9mIFN0b3JhZ2VDbHVzdGVyUGVlciIsInByb3BlcnRpZXMiOnsicGVlckluZm8iOnsicHJvcGVydGllcyI6eyJzdG9yYWdlQ2x1c3RlclVpZCI6eyJ0eXBlIjoic3RyaW5nIn19LCJ0eXBlIjoib2JqZWN0In0sInN0YXRlIjp7InR5cGUiOiJzdHJpbmcifX0sInJlcXVpcmVkIjpbInBlZXJJbmZvIl0sInR5cGUiOiJvYmplY3QifX0sInJlcXVpcmVkIjpbInNwZWMiXSwidHlwZSI6Im9iamVjdCJ9fSwic2VydmVkIjp0cnVlLCJzdG9yYWdlIjp0cnVlLCJzdWJyZXNvdXJjZXMiOnsic3RhdHVzIjp7fX19XX19
- type: olm.bundle.object
  value:
    data: eyJhcGlWZXJzaW9uIjoiYXBpZXh0ZW5zaW9ucy5rOHMuaW8vdjEiLCJraW5kIjoiQ3VzdG9tUmVzb3VyY2VEZWZpbml0aW9uIiwibWV0YWRhdGEiOnsiYW5ub3RhdGlvbnMiOnsiY29udHJvbGxlci1nZW4ua3ViZWJ1aWxkZXIuaW8vdmVyc2lvbiI6InYwLjE2LjEifSwibmFtZSI6InN0b3JhZ2Vjb25zdW1lcnMub2NzLm9wZW5zaGlmdC5pbyJ9LCJzcGVjIjp7Imdyb3VwIjoib2NzLm9wZW5zaGlmdC5pbyIsIm5hbWVzIjp7ImtpbmQiOiJTdG9yYWdlQ29uc3VtZXIiLCJsaXN0S2luZCI6IlN0b3JhZ2VDb25zdW1lckxpc3QiLCJwbHVyYWwiOiJzdG9yYWdlY29uc3VtZXJzIiwic2luZ3VsYXIiOiJzdG9yYWdlY29uc3VtZXIifSwic2NvcGUiOiJOYW1lc3BhY2VkIiwidmVyc2lvbnMiOlt7Im5hbWUiOiJ2MWFscGhhMSIsInNjaGVtYSI6eyJvcGVuQVBJVjNTY2hlbWEiOnsiZGVzY3JpcHRpb24iOiJTdG9yYWdlQ29uc3VtZXIgaXMgdGhlIFNjaGVtYSBmb3IgdGhlIHN0b3JhZ2Vjb25zdW1lcnMgQVBJIiwicHJvcGVydGllcyI6eyJhcGlWZXJzaW9uIjp7ImRlc2NyaXB0aW9uIjoiQVBJVmVyc2lvbiBkZWZpbmVzIHRoZSB2ZXJzaW9uZWQgc2NoZW1hIG9mIHRoaXMgcmVwcmVzZW50YXRpb24gb2YgYW4gb2JqZWN0LlxuU2VydmVycyBzaG91bGQgY29udmVydCByZWNvZ25pemVkIHNjaGVtYXMgdG8gdGhlIGxhdGVzdCBpbnRlcm5hbCB2YWx1ZSwgYW5kXG5tYXkgcmVqZWN0IHVucmVjb2duaXplZCB2YWx1ZXMuXG5Nb3JlIGluZm86IGh0dHBzOi8vZ2l0Lms4cy5pby9jb21tdW5pdHkvY29udHJpYnV0b3JzL2RldmVsL3NpZy1hcmNoaXRlY3R1cmUvYXBpLWNvbnZlbnRpb25zLm1kI3Jlc291cmNlcyIsInR5cGUiOiJzdHJpbmcifSwia2luZCI6eyJkZXNjcmlwdGlvbiI6IktpbmQgaXMgYSBzdHJpbmcgdmFsdWUgcmVwcmVzZW50aW5nIHRoZSBSRVNUIHJlc291cmNlIHRoaXMgb2JqZWN0IHJlcHJlc2VudHMuXG5TZXJ2ZXJzIG1heSBpbmZlciB0aGlzIGZyb20gdGhlIGVuZHBvaW50IHRoZSBjbGllbnQgc3VibWl0cyByZXF1ZXN0cyB0by5cbkNhbm5vdCBiZSB1cGRhdGVkLlxuSW4gQ2FtZWxDYXNlLlxuTW9yZSBpbmZvOiBodHRwczovL2dpdC5rOHMuaW8vY29tbXVuaXR5L2NvbnRyaWJ1dG9ycy9kZXZlbC9zaWctYXJjaGl0ZWN0dXJlL2FwaS1jb252ZW50aW9ucy5tZCN0eXBlcy1raW5kcyIsInR5cGUiOiJzdHJpbmcifSwibWV0YWRhdGEiOnsidHlwZSI6Im9iamVjdCJ9LCJzcGVjIjp7ImRlc2NyaXB0aW9uIjoiU3RvcmFnZUNvbnN1bWVyU3BlYyBkZWZpbmVzIHRoZSBkZXNpcmVkIHN0YXRlIG9mIFN0b3JhZ2VDb25zdW1lciIsInByb3BlcnRpZXMiOnsiZW5hYmxlIjp7ImRlc2NyaXB0aW9uIjoiRW5hYmxlIGZsYWcgaWdub3JlcyBhIHJlY29uY2lsZSBpZiBzZXQgdG8gZmFsc2UiLCJ0eXBlIjoiYm9vbGVhbiJ9LCJyZXNvdXJjZU5hbWVNYXBwaW5nQ29uZmlnTWFwIjp7ImRlc2NyaXB0aW9uIjoiTG9jYWxPYmplY3RSZWZlcmVuY2UgY29udGFpbnMgZW5vdWdoIGluZm9ybWF0aW9uIHRvIGxldCB5b3UgbG9jYXRlIHRoZVxucmVmZXJlbmNlZCBvYmplY3QgaW5zaWRlIHRoZSBzYW1lIG5hbWVzcGFjZS4iLCJwcm9wZXJ0aWVzIjp7Im5hbWUiOnsiZGVmYXVsdCI6IiIsImRlc2NyaXB0aW9uIjoiTmFtZSBvZiB0aGUgcmVmZXJlbnQuXG5UaGlzIGZpZWxkIGlzIGVmZmVjdGl2ZWx5IHJlcXVpcmVkLCBidXQgZHVlIHRvIGJhY2t3YXJkcyBjb21wYXRpYmlsaXR5IGlzXG5hbGxvd2VkIHRvIGJlIGVtcHR5LiBJbnN0YW5jZXMgb2YgdGhpcyB0eXBlIHdpdGggYW4gZW1wdHkgdmFsdWUgaGVyZSBhcmVcbmFsbW9zdCBjZXJ0YWlubHkgd3JvbmcuXG5Nb3JlIGluZm86IGh0dHBzOi8va3ViZXJuZXRlcy5pby9kb2NzL2NvbmNlcHRzL292ZXJ2aWV3L3dvcmtpbmctd2l0aC1vYmplY3RzL25hbWVzLyNuYW1lcyIsInR5cGUiOiJzdHJpbmcifX0sInR5cGUiOiJvYmplY3QiLCJ4LWt1YmVybmV0ZXMtbWFwLXR5cGUiOiJhdG9taWMifSwic3RvcmFnZUNsYXNzZXMiOnsiaXRlbXMiOnsicHJvcGVydGllcyI6eyJuYW1lIjp7InR5cGUiOiJzdHJpbmcifX0sInJlcXVpcmVkIjpbIm5hbWUiXSwidHlwZSI6Im9iamVjdCJ9LCJ0eXBlIjoiYXJyYXkifSwic3RvcmFnZVF1b3RhSW5HaUIiOnsiZGVzY3JpcHRpb24iOiJTdG9yYWdlUXVvdGFJbkdpQiBkZXNjcmliZXMgcXVvdGEgZm9yIHRoZSBjb25zdW1lciIsInR5cGUiOiJpbnRlZ2VyIn0sInZvbHVtZUdyb3VwU25hcHNob3RDbGFzc2VzIjp7Iml0ZW1zIjp7InByb3BlcnRpZXMiOnsibmFtZSI6eyJ0eXBlIjoic3RyaW5nIn19LCJyZXF1aXJlZCI6WyJuYW1lIl0sInR5cGUiOiJvYmplY3QifSwidHlwZSI6ImFycmF5In0sInZvbHVtZVJlcGxpY2F0aW9uQ2xhc3NlcyI6eyJpdGVtcyI6eyJwcm9wZXJ0aWVzIjp7Im5hbWUiOnsidHlwZSI6InN0cmluZyJ9fSwicmVxdWlyZWQiOlsibmFtZSJdLCJ0eXBlIjoib2JqZWN0In0sInR5cGUiOiJhcnJheSJ9LCJ2b2x1bWVTbmFwc2hvdENsYXNzZXMiOnsiaXRlbXMiOnsicHJvcGVydGllcyI6eyJuYW1lIjp7InR5cGUiOiJzdHJpbmcifX0sInJlcXVpcmVkIjpbIm5hbWUiXSwidHlwZSI6Im9iamVjdCJ9LCJ0eXBlIjoiYXJyYXkifX0sInR5cGUiOiJvYmplY3QifSwic3RhdHVzIjp7ImRlc2NyaXB0aW9uIjoiU3RvcmFnZUNvbnN1bWVyU3RhdHVzIGRlZmluZXMgdGhlIG9ic2VydmVkIHN0YXRlIG9mIFN0b3JhZ2VDb25zdW1lciIsInByb3BlcnRpZXMiOnsiY2VwaFJlc291cmNlcyI6eyJkZXNjcmlwdGlvbiI6IkNlcGhSZXNvdXJjZXMgcHJvdmlkZSBkZXRhaWxzIG9mIGNyZWF0ZWQgY2VwaCByZXNvdXJjZXMgcmVxdWlyZWQgZm9yIGV4dGVybmFsIHN0b3JhZ2UiLCJpdGVtcyI6eyJkZXNjcmlwdGlvbiI6IkNlcGhSZXNvdXJjZXNTcGVjIGhvbGQgZGV0YWlscyBvZiBjcmVhdGVkIGNlcGggcmVzb3VyY2VzIHJlcXVpcmVkIGZvciBleHRlcm5hbCBzdG9yYWdlIiwicHJvcGVydGllcyI6eyJjZXBoQ2xpZW50cyI6eyJhZGRpdGlvbmFsUHJvcGVydGllcyI6eyJ0eXBlIjoic3RyaW5nIn0sImRlc2NyaXB0aW9uIjoiQ2VwaENsaWVudHMgaG9sZHMgdGhlIG5hbWUgb2YgQ2VwaENsaWVudHMgbWFwcGVkIHRvIHRoZSBjcmVhdGVkIGNlcGggcmVzb3VyY2UiLCJ0eXBlIjoib2JqZWN0In0sImtpbmQiOnsiZGVzY3JpcHRpb24iOiJLaW5kIGRlc2NyaWJlcyB0aGUga2luZCBvZiBjcmVhdGVkIGNlcGggcmVzb3VyY2UiLCJ0eXBlIjoic3RyaW5nIn0sIm5hbWUiOnsiZGVzY3JpcHRpb24iOiJOYW1lIGRlc2NyaWJlcyB0aGUgbmFtZSBvZiBjcmVhdGVkIGNlcGggcmVzb3VyY2UiLCJ0eXBlIjoic3RyaW5nIn0sInN0YXR1cyI6eyJkZXNjcmlwdGlvbiI6IlBoYXNlIGRlc2NyaWJlcyB0aGUgcGhhc2Ugb2YgY3JlYXRlZCBjZXBoIHJlc291cmNlIiwidHlwZSI6InN0cmluZyJ9fSwidHlwZSI6Im9iamVjdCJ9LCJ0eXBlIjoiYXJyYXkifSwiY2xpZW50Ijp7ImRlc2NyaXB0aW9uIjoiSW5mb3JtYXRpb24gb2Ygc3RvcmFnZSBjbGllbnQgcmVjZWl2ZWQgZnJvbSBjb25zdW1lciIsInByb3BlcnRpZXMiOnsiY2xpZW50SWQiOnsiZGVzY3JpcHRpb24iOiJJRCBpcyB0aGUgazhzIFVJRCBvZiBjb25uZWN0ZWQgc3RvcmFnZWNsaWVudCIsInR5cGUiOiJzdHJpbmcifSwiY2x1c3RlcklkIjp7ImRlc2NyaXB0aW9uIjoiQ2x1c3RlcklEIGlzIHRoZSBpZCBvZiB0aGUgb3BlbnNoaWZ0IGNsdXN0ZXIiLCJ0eXBlIjoic3RyaW5nIn0sImNsdXN0ZXJOYW1lIjp7ImRlc2NyaXB0aW9uIjoiQ2x1c3Rlck5hbWUgaXMgdGhlIG5hbWUgb2YgdGhlIG9wZW5zaGlmdCBjbHVzdGVyIiwidHlwZSI6InN0cmluZyJ9LCJuYW1lIjp7ImRlc2NyaXB0aW9uIjoiTmFtZSBpcyB0aGUgbmFtZSBvZiBjb25uZWN0ZWQgc3RvcmFnZWNsaWVudCIsInR5cGUiOiJzdHJpbmcifSwib3BlcmF0b3JOYW1lc3BhY2UiOnsiZGVzY3JpcHRpb24iOiJDbGllbnQgT3BlcmF0b3IgTmFtZXNwYWNlIiwidHlwZSI6InN0cmluZyJ9LCJvcGVyYXRvclZlcnNpb24iOnsiZGVzY3JpcHRpb24iOiJTdG9yYWdlQ2xpZW50IE9wZXJhdG9yIFZlcnNpb24iLCJ0eXBlIjoic3RyaW5nIn0sInBsYXRmb3JtVmVyc2lvbiI6eyJkZXNjcmlwdGlvbiI6IlN0b3JhZ2VDbGllbnQgUGxhdGZvcm0gVmVyc2lvbiIsInR5cGUiOiJzdHJpbmcifSwic3RvcmFnZVF1b3RhVXRpbGl6YXRpb25SYXRpbyI6eyJkZXNjcmlwdGlvbiI6IlN0b3JhZ2VRdW90YVV0aWxpemF0aW9uUmF0aW8gaXMgdGhlIHJhdGlvIG9mIHV0aWxpemVkIHF1b3RhIG9mIGNvbm5lY3RlZCBjbGllbnQiLCJ0eXBlIjoibnVtYmVyIn19LCJ0eXBlIjoib2JqZWN0In0sImxhc3RIZWFydGJlYXQiOnsiZGVzY3JpcHRpb24iOiJUaW1lc3RhbXAgb2YgbGFzdCBoZWFydGJlYXQgcmVjZWl2ZWQgZnJvbSBjb25zdW1lciIsImZvcm1hdCI6ImRhdGUtdGltZSIsInR5cGUiOiJzdHJpbmcifSwib25ib2FyZGluZ1RpY2tldFNlY3JldCI6eyJkZXNjcmlwdGlvbiI6IkxvY2FsT2JqZWN0UmVmZXJlbmNlIGNvbnRhaW5zIGVub3VnaCBpbmZvcm1hdGlvbiB0byBsZXQgeW91IGxvY2F0ZSB0aGVcbnJlZmVyZW5jZWQgb2JqZWN0IGluc2lkZSB0aGUgc2FtZSBuYW1lc3BhY2UuIiwicHJvcGVydGllcyI6eyJuYW1lIjp7ImRlZmF1bHQiOiIiLCJkZXNjcmlwdGlvbiI6Ik5hbWUgb2YgdGhlIHJlZmVyZW50LlxuVGhpcyBmaWVsZCBpcyBlZmZlY3RpdmVseSByZXF1aXJlZCwgYnV0IGR1ZSB0byBiYWNrd2FyZHMgY29tcGF0aWJpbGl0eSBpc1xuYWxsb3dlZCB0byBiZSBlbXB0eS4gSW5zdGFuY2VzIG9mIHRoaXMgdHlwZSB3aXRoIGFuIGVtcHR5IHZhbHVlIGhlcmUgYXJlXG5hbG1vc3QgY2VydGFpbmx5IHdyb25nLlxuTW9yZSBpbmZvOiBodHRwczovL2t1YmVybmV0ZXMuaW8vZG9jcy9jb25jZXB0cy9vdmVydmlldy93b3JraW5nLXdpdGgtb2JqZWN0cy9uYW1lcy8jbmFtZXMiLCJ0eXBlIjoic3RyaW5nIn19LCJ0eXBlIjoib2JqZWN0IiwieC1rdWJlcm5ldGVzLW1hcC10eXBlIjoiYXRvbWljIn0sInJlc291cmNlTmFtZU1hcHBpbmdDb25maWdNYXAiOnsiZGVzY3JpcHRpb24iOiJMb2NhbE9iamVjdFJlZmVyZW5jZSBjb250YWlucyBlbm91Z2ggaW5mb3JtYXRpb24gdG8gbGV0IHlvdSBsb2NhdGUgdGhlXG5yZWZlcmVuY2VkIG9iamVjdCBpbnNpZGUgdGhlIHNhbWUgbmFtZXNwYWNlLiIsInByb3BlcnRpZXMiOnsibmFtZSI6eyJkZWZhdWx0IjoiIiwiZGVzY3JpcHRpb24iOiJOYW1lIG9mIHRoZSByZWZlcmVudC5cblRoaXMgZmllbGQgaXMgZWZmZWN0aXZlbHkgcmVxdWlyZWQsIGJ1dCBkdWUgdG8gYmFja3dhcmRzIGNvbXBhdGliaWxpdHkgaXNcbmFsbG93ZWQgdG8gYmUgZW1wdHkuIEluc3RhbmNlcyBvZiB0aGlzIHR5cGUgd2l0aCBhbiBlbXB0eSB2YWx1ZSBoZXJlIGFyZVxuYWxtb3N0IGNlcnRhaW5seSB3cm9uZy5cbk1vcmUgaW5mbzogaHR0cHM6Ly9rdWJlcm5ldGVzLmlvL2RvY3MvY29uY2VwdHMvb3ZlcnZpZXcvd29ya2luZy13aXRoLW9iamVjdHMvbmFtZXMvI25hbWVzIiwidHlwZSI6InN0cmluZyJ9fSwidHlwZSI6Im9iamVjdCIsIngta3ViZXJuZXRlcy1tYXAtdHlwZSI6ImF0b21pYyJ9LCJzdGF0ZSI6eyJkZXNjcmlwdGlvbiI6IlN0YXRlIGRlc2NyaWJlcyB0aGUgc3RhdGUgb2YgU3RvcmFnZUNvbnN1bWVyIiwidHlwZSI6InN0cmluZyJ9fSwidHlwZSI6Im9iamVjdCJ9fSwidHlwZSI6Im9iamVjdCJ9fSwic2VydmVkIjp0cnVlLCJzdG9yYWdlIjp0cnVlLCJzdWJyZXNvdXJjZXMiOnsic3RhdHVzIjp7fX19XX19
- type: olm.bundle.object
  value:
    data: eyJhcGlWZXJzaW9uIjoiYXBpZXh0ZW5zaW9ucy5rOHMuaW8vdjEiLCJraW5kIjoiQ3VzdG9tUmVzb3VyY2VEZWZpbml0aW9uIiwibWV0YWRhdGEiOnsiYW5ub3RhdGlvbnMiOnsiY29udHJvbGxlci1nZW4ua3ViZWJ1aWxkZXIuaW8vdmVyc2lvbiI6InYwLjE2LjEifSwibmFtZSI6InN0b3JhZ2VyZXF1ZXN0cy5vY3Mub3BlbnNoaWZ0LmlvIn0sInNwZWMiOnsiZ3JvdXAiOiJvY3Mub3BlbnNoaWZ0LmlvIiwibmFtZXMiOnsia2luZCI6IlN0b3JhZ2VSZXF1ZXN0IiwibGlzdEtpbmQiOiJTdG9yYWdlUmVxdWVzdExpc3QiLCJwbHVyYWwiOiJzdG9yYWdlcmVxdWVzdHMiLCJzaW5ndWxhciI6InN0b3JhZ2VyZXF1ZXN0In0sInNjb3BlIjoiTmFtZXNwYWNlZCIsInZlcnNpb25zIjpbeyJhZGRpdGlvbmFsUHJpbnRlckNvbHVtbnMiOlt7Impzb25QYXRoIjoiLnNwZWMudHlwZSIsIm5hbWUiOiJTdG9yYWdlVHlwZSIsInR5cGUiOiJzdHJpbmcifSx7Impzb25QYXRoIjoiLnN0YXR1cy5waGFzZSIsIm5hbWUiOiJQaGFzZSIsInR5cGUiOiJzdHJpbmcifV0sIm5hbWUiOiJ2MWFscGhhMSIsInNjaGVtYSI6eyJvcGVuQVBJVjNTY2hlbWEiOnsiZGVzY3JpcHRpb24iOiJTdG9yYWdlUmVxdWVzdCBpcyB0aGUgU2NoZW1hIGZvciB0aGUgU3RvcmFnZVJlcXVlc3RzIEFQSSIsInByb3BlcnRpZXMiOnsiYXBpVmVyc2lvbiI6eyJkZXNjcmlwdGlvbiI6IkFQSVZlcnNpb24gZGVmaW5lcyB0aGUgdmVyc2lvbmVkIHNjaGVtYSBvZiB0aGlzIHJlcHJlc2VudGF0aW9uIG9mIGFuIG9iamVjdC5cblNlcnZlcnMgc2hvdWxkIGNvbnZlcnQgcmVjb2duaXplZCBzY2hlbWFzIHRvIHRoZSBsYXRlc3QgaW50ZXJuYWwgdmFsdWUsIGFuZFxubWF5IHJlamVjdCB1bnJlY29nbml6ZWQgdmFsdWVzLlxuTW9yZSBpbmZvOiBodHRwczovL2dpdC5rOHMuaW8vY29tbXVuaXR5L2NvbnRyaWJ1dG9ycy9kZXZlbC9zaWctYXJjaGl0ZWN0dXJlL2FwaS1jb252ZW50aW9ucy5tZCNyZXNvdXJjZXMiLCJ0eXBlIjoic3RyaW5nIn0sImtpbmQiOnsiZGVzY3JpcHRpb24iOiJLaW5kIGlzIGEgc3RyaW5nIHZhbHVlIHJlcHJlc2VudGluZyB0aGUgUkVTVCByZXNvdXJjZSB0aGlzIG9iamVjdCByZXByZXNlbnRzLlxuU2VydmVycyBtYXkgaW5mZXIgdGhpcyBmcm9tIHRoZSBlbmRwb2ludCB0aGUgY2xpZW50IHN1Ym1pdHMgcmVxdWVzdHMgdG8uXG5DYW5ub3QgYmUgdXBkYXRlZC5cbkluIENhbWVsQ2FzZS5cbk1vcmUgaW5mbzogaHR0cHM6Ly9naXQuazhzLmlvL2NvbW11bml0eS9jb250cmlidXRvcnMvZGV2ZWwvc2lnLWFyY2hpdGVjdHVyZS9hcGktY29udmVudGlvbnMubWQjdHlwZXMta2luZHMiLCJ0eXBlIjoic3RyaW5nIn0sIm1ldGFkYXRhIjp7InR5cGUiOiJvYmplY3QifSwic3BlYyI6eyJkZXNjcmlwdGlvbiI6IlN0b3JhZ2VSZXF1ZXN0U3BlYyBkZWZpbmVzIHRoZSBkZXNpcmVkIHN0YXRlIG9mIFN0b3JhZ2VSZXF1ZXN0IiwicHJvcGVydGllcyI6eyJlbmNyeXB0aW9uTWV0aG9kIjp7InR5cGUiOiJzdHJpbmcifSwic3RvcmFnZVByb2ZpbGUiOnsidHlwZSI6InN0cmluZyJ9LCJ0eXBlIjp7ImVudW0iOlsiYmxvY2siLCJzaGFyZWRmaWxlIl0sInR5cGUiOiJzdHJpbmcifX0sInJlcXVpcmVkIjpbInR5cGUiXSwidHlwZSI6Im9iamVjdCJ9LCJzdGF0dXMiOnsiZGVzY3JpcHRpb24iOiJTdG9yYWdlUmVxdWVzdFN0YXR1cyBkZWZpbmVzIHRoZSBvYnNlcnZlZCBzdGF0ZSBvZiBTdG9yYWdlUmVxdWVzdCIsInByb3BlcnRpZXMiOnsiY2VwaFJlc291cmNlcyI6eyJkZXNjcmlwdGlvbiI6IkNlcGhSZXNvdXJjZXMgcHJvdmlkZSBkZXRhaWxzIG9mIGNyZWF0ZWQgY2VwaCByZXNvdXJjZXMgcmVxdWlyZWQgZm9yIGV4dGVybmFsIHN0b3JhZ2UiLCJpdGVtcyI6eyJkZXNjcmlwdGlvbiI6IkNlcGhSZXNvdXJjZXNTcGVjIGhvbGQgZGV0YWlscyBvZiBjcmVhdGVkIGNlcGggcmVzb3VyY2VzIHJlcXVpcmVkIGZvciBleHRlcm5hbCBzdG9yYWdlIiwicHJvcGVydGllcyI6eyJjZXBoQ2xpZW50cyI6eyJhZGRpdGlvbmFsUHJvcGVydGllcyI6eyJ0eXBlIjoic3RyaW5nIn0sImRlc2NyaXB0aW9uIjoiQ2VwaENsaWVudHMgaG9sZHMgdGhlIG5hbWUgb2YgQ2VwaENsaWVudHMgbWFwcGVkIHRvIHRoZSBjcmVhdGVkIGNlcGggcmVzb3VyY2UiLCJ0eXBlIjoib2JqZWN0In0sImtpbmQiOnsiZGVzY3JpcHRpb24iOiJLaW5kIGRlc2NyaWJlcyB0aGUga2luZCBvZiBjcmVhdGVkIGNlcGggcmVzb3VyY2UiLCJ0eXBlIjoic3RyaW5nIn0sIm5hbWUiOnsiZGVzY3JpcHRpb24iOiJOYW1lIGRlc2NyaWJlcyB0aGUgbmFtZSBvZiBjcmVhdGVkIGNlcGggcmVzb3VyY2UiLCJ0eXBlIjoic3RyaW5nIn0sInN0YXR1cyI6eyJkZXNjcmlwdGlvbiI6IlBoYXNlIGRlc2NyaWJlcyB0aGUgcGhhc2Ugb2YgY3JlYXRlZCBjZXBoIHJlc291cmNlIiwidHlwZSI6InN0cmluZyJ9fSwidHlwZSI6Im9iamVjdCJ9LCJ0eXBlIjoiYXJyYXkifSwicGhhc2UiOnsidHlwZSI6InN0cmluZyJ9fSwidHlwZSI6Im9iamVjdCJ9fSwicmVxdWlyZWQiOlsic3BlYyJdLCJ0eXBlIjoib2JqZWN0In19LCJzZXJ2ZWQiOnRydWUsInN0b3JhZ2UiOnRydWUsInN1YnJlc291cmNlcyI6eyJzdGF0dXMiOnt9fX1dfX0=
- type: olm.bundle.object
  value:
    data: eyJhcGlWZXJzaW9uIjoicmJhYy5hdXRob3JpemF0aW9uLms4cy5pby92MSIsImtpbmQiOiJSb2xlIiwibWV0YWRhdGEiOnsibmFtZSI6InV4LWJhY2tlbmQtc2VydmVyIn0sInJ1bGVzIjpbeyJhcGlHcm91cHMiOlsiIl0sInJlc291cmNlTmFtZXMiOlsib25ib2FyZGluZy1wcml2YXRlLWtleSIsInV4LWNlcnQtc2VjcmV0IiwidXgtYmFja2VuZC1wcm94eSJdLCJyZXNvdXJjZXMiOlsic2VjcmV0cyJdLCJ2ZXJicyI6WyJnZXQiLCJsaXN0Il19LHsiYXBpR3JvdXBzIjpbIm9jcy5vcGVuc2hpZnQuaW8iXSwicmVzb3VyY2VzIjpbInN0b3JhZ2VjbHVzdGVycyJdLCJ2ZXJicyI6WyJnZXQiLCJsaXN0IiwidXBkYXRlIl19LHsiYXBpR3JvdXBzIjpbImNlcGgucm9vay5pbyJdLCJyZXNvdXJjZXMiOlsiY2VwaGJsb2NrcG9vbHMiXSwidmVyYnMiOlsiY3JlYXRlIl19XX0=
- type: olm.bundle.object
  value:
    data: eyJhcGlWZXJzaW9uIjoicmJhYy5hdXRob3JpemF0aW9uLms4cy5pby92MSIsImtpbmQiOiJSb2xlQmluZGluZyIsIm1ldGFkYXRhIjp7Im5hbWUiOiJ1eC1iYWNrZW5kLXNlcnZlciJ9LCJyb2xlUmVmIjp7ImFwaUdyb3VwIjoicmJhYy5hdXRob3JpemF0aW9uLms4cy5pbyIsImtpbmQiOiJSb2xlIiwibmFtZSI6InV4LWJhY2tlbmQtc2VydmVyIn0sInN1YmplY3RzIjpbeyJraW5kIjoiU2VydmljZUFjY291bnQiLCJuYW1lIjoidXgtYmFja2VuZC1zZXJ2ZXIiLCJuYW1lc3BhY2UiOiJvcGVuc2hpZnQtc3RvcmFnZSJ9XX0=
relatedImages:
- image: gcr.io/kubebuilder/kube-rbac-proxy:v0.13.0
  name: kube-rbac-proxy
- image: quay.io/ceph/ceph:v19.2.1
  name: ceph-container
- image: quay.io/ocs-dev/ocs-metrics-exporter:main-552d231
  name: ocs-metrics-exporter
- image: quay.io/ocs-dev/ocs-must-gather:latest
  name: ocs-must-gather
- image: quay.io/ocs-dev/ocs-operator-bundle:main-552d231
  name: ""
- image: quay.io/ocs-dev/ocs-operator:main-552d231
  name: ""
- image: quay.io/ocs-dev/rook-ceph:vmaster-ab4f1ba58
  name: rook-container
- image: quay.io/openshift/origin-oauth-proxy:4.19.0
  name: ux-backend-oauth-image
schema: olm.bundle
